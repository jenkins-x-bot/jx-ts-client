/// <reference path="./custom.d.ts" />
// tslint:disable
/**
 * Jenkins X
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as url from "url";
import * as portableFetch from "portable-fetch";
import { Configuration } from "./configuration";

const BASE_PATH = "http://localhost".replace(/\/+$/, "");

/**
 *
 * @export
 */
export const COLLECTION_FORMATS = {
    csv: ",",
    ssv: " ",
    tsv: "\t",
    pipes: "|",
};

/**
 *
 * @export
 * @interface FetchAPI
 */
export interface FetchAPI {
    (url: string, init?: any): Promise<Response>;
}

/**
 *  
 * @export
 * @interface FetchArgs
 */
export interface FetchArgs {
    url: string;
    options: any;
}

/**
 * 
 * @export
 * @class BaseAPI
 */
export class BaseAPI {
    protected configuration: Configuration | undefined;

    constructor(configuration?: Configuration, protected basePath: string = BASE_PATH, protected fetch: FetchAPI = portableFetch) {
        if (configuration) {
            this.configuration = configuration;
            this.basePath = configuration.basePath || this.basePath;
        }
    }
};

/**
 * 
 * @export
 * @class RequiredError
 * @extends {Error}
 */
export class RequiredError extends Error {
    name: "RequiredError" = "RequiredError";
    constructor(public field: string, msg?: string) {
        super(msg);
    }
}

/**
 * AccountReference is a reference to a user account in another system that is attached to this user
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1AccountReference
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1AccountReference {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1AccountReference
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1AccountReference
     */
    provider?: string;
}

/**
 * App is the metadata for an App
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1App
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1App {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1App
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1App
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1App
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1AppSpec}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1App
     */
    spec?: ComGithubJenkinsXJxPkgApisJenkinsIoV1AppSpec;
}

/**
 * AppList is a structure used by k8s to store lists of apps
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1AppList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1AppList {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1AppList
     */
    apiVersion?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1App>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1AppList
     */
    items: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1App>;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1AppList
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1AppList
     */
    metadata: IoK8sApimachineryPkgApisMetaV1ListMeta;
}

/**
 * AppSpec provides details of the metadata for an App
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1AppSpec
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1AppSpec {
    /**
     * A list of services that this App exposes
     * @type {Array<string>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1AppSpec
     */
    exposedServices?: Array<string>;
}

/**
 * 
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Attachment
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Attachment {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Attachment
     */
    name?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Attachment
     */
    urls?: Array<string>;
}

/**
 * Binary provies the details of a downloadable binary
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Binary
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Binary {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Binary
     */
    goarch?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Binary
     */
    goos?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Binary
     */
    url?: string;
}

/**
 * BuildPack represents a set of language specific build packs and associated quickstarts
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPack
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPack {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPack
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPack
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPack
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPack
     */
    spec?: ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec;
}

/**
 * BuildPackList is a list of TypeMeta resources
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackList {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackList
     */
    apiVersion?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPack>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackList
     */
    items: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPack>;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackList
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackList
     */
    metadata: IoK8sApimachineryPkgApisMetaV1ListMeta;
}

/**
 * BuildPackSpec is the specification of an BuildPack
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec
     */
    gitRef?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec
     */
    gitUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec
     */
    label?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec
     */
    quickstartLocations?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation>;
}

/**
 * 
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ChartRef
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ChartRef {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ChartRef
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ChartRef
     */
    repo?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ChartRef
     */
    repoName?: string;
}

/**
 * CommitStatus represents the commit statuses for a particular pull request
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatus
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatus {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatus
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatus
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatus
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusSpec}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatus
     */
    spec?: ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusSpec;
}

/**
 * 
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusCommitReference
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusCommitReference {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusCommitReference
     */
    gitUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusCommitReference
     */
    pullRequest?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusCommitReference
     */
    sha?: string;
}

/**
 * 
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails {
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusItem>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails
     */
    items?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusItem>;
    /**
     * 
     * @type {boolean}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails
     */
    checked: boolean;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusCommitReference}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails
     */
    commit: ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusCommitReference;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails
     */
    context: string;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails
     */
    pipelineActivity: ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference;
}

/**
 * 
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusItem
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusItem {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusItem
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusItem
     */
    name?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusItem
     */
    pass: boolean;
}

/**
 * CommitStatusList is a structure used by k8s to store lists of commit statuses
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusList {
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatus>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusList
     */
    items: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatus>;
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusList
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusList
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusList
     */
    metadata: IoK8sApimachineryPkgApisMetaV1ListMeta;
}

/**
 * CommitStatusSpec provides details of a particular commit status
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusSpec
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusSpec {
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusSpec
     */
    items: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails>;
}

/**
 * CommitSummary is the summary of a commit
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary {
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary
     */
    author?: ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary
     */
    branch?: string;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary
     */
    committer?: ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails;
    /**
     * 
     * @type {Array<string>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary
     */
    issueIds?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary
     */
    sha?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary
     */
    url?: string;
}

/**
 * CoreActivityStep is a base step included in Stages of a pipeline or other kinds of step
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1CoreActivityStep
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1CoreActivityStep {
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CoreActivityStep
     */
    completedTimestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CoreActivityStep
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CoreActivityStep
     */
    name?: string;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CoreActivityStep
     */
    startedTimestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1CoreActivityStep
     */
    status?: string;
}

/**
 * Environment represents an environment like Dev, Test, Staging, Production where code lives
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Environment
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Environment {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Environment
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Environment
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Environment
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentSpec}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Environment
     */
    spec?: ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentSpec;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentStatus}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Environment
     */
    status?: ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentStatus;
}

/**
 * EnvironmentFilter specifies the environments to apply the role binding to
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentFilter
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentFilter {
    /**
     * 
     * @type {Array<string>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentFilter
     */
    excludes?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentFilter
     */
    includes?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentFilter
     */
    kind?: string;
}

/**
 * EnvironmentList is a list of TypeMeta resources
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentList {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentList
     */
    apiVersion?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Environment>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentList
     */
    items: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Environment>;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentList
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentList
     */
    metadata: IoK8sApimachineryPkgApisMetaV1ListMeta;
}

/**
 * EnvironmentRepository is the repository for an environment using GitOps
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRepository
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRepository {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRepository
     */
    kind?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRepository
     */
    ref?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRepository
     */
    url?: string;
}

/**
 * EnvironmentRoleBinding is like a vanilla RoleBinding but applies to a set of Namespaces based on an Environment filter so that roles can be bound to multiple namespaces easily.  For example to specify the binding of roles on all Preview environments or on all permanent environments.
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBinding
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBinding {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBinding
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBinding
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBinding
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBinding
     */
    spec?: ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingStatus}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBinding
     */
    status?: ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingStatus;
}

/**
 * EnvironmentRoleBindingList is a list of TypeMeta resources
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingList {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingList
     */
    apiVersion?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBinding>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingList
     */
    items: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBinding>;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingList
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingList
     */
    metadata: IoK8sApimachineryPkgApisMetaV1ListMeta;
}

/**
 * EnvironmentRoleBindingSpec is the specification of an EnvironmentRoleBinding
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec {
    /**
     * specifies which sets of environments this binding applies to
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentFilter>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec
     */
    environments?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentFilter>;
    /**
     * 
     * @type {IoK8sApiRbacV1RoleRef}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec
     */
    roleRef: IoK8sApiRbacV1RoleRef;
    /**
     * Subjects holds references to the objects the role applies to.
     * @type {Array<IoK8sApiRbacV1Subject>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec
     */
    subjects: Array<IoK8sApiRbacV1Subject>;
}

/**
 * EnvironmentRoleBindingStatus is the status for an EnvironmentRoleBinding resource
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingStatus
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingStatus {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingStatus
     */
    version?: string;
}

/**
 * EnvironmentSpec is the specification of an Environment
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentSpec
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentSpec {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentSpec
     */
    cluster?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentSpec
     */
    kind?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentSpec
     */
    label?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentSpec
     */
    namespace?: string;
    /**
     * 
     * @type {number}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentSpec
     */
    order?: number;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewGitSpec}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentSpec
     */
    previewGitInfo?: ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewGitSpec;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentSpec
     */
    promotionStrategy?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentSpec
     */
    pullRequestURL?: string;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRepository}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentSpec
     */
    source?: ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRepository;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentSpec
     */
    teamSettings?: ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentSpec
     */
    webHookEngine?: string;
}

/**
 * EnvironmentStatus is the status for an Environment resource
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentStatus
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentStatus {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentStatus
     */
    version?: string;
}

/**
 * 
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentVariable
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentVariable {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentVariable
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentVariable
     */
    value?: string;
}

/**
 * Extension represents an extension available to this Jenkins X install
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Extension
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Extension {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Extension
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Extension
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Extension
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionSpec}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Extension
     */
    spec?: ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionSpec;
}

/**
 * ExtensionConfig is the configuration and enablement for an extension inside an app
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionConfig
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionConfig {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionConfig
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionConfig
     */
    namespace: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionParameterValue>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionConfig
     */
    parameters: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionParameterValue>;
}

/**
 * ExtensionsConfigList contains a list of ExtensionConfig items
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionConfigList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionConfigList {
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionConfig>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionConfigList
     */
    extensions: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionConfig>;
}

/**
 * ExtensionDefinition defines an Extension
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinition
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinition {
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionChildReference>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinition
     */
    children?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionChildReference>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinition
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinition
     */
    given?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinition
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinition
     */
    namespace: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionParameter>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinition
     */
    parameters?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionParameter>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinition
     */
    scriptFile?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinition
     */
    uuid: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinition
     */
    when?: Array<string>;
}

/**
 * ExtensionDefinitionChildReference provides a reference to a child
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionChildReference
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionChildReference {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionChildReference
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionChildReference
     */
    namespace?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionChildReference
     */
    remote?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionChildReference
     */
    tag?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionChildReference
     */
    uuid?: string;
}

/**
 * ExtensionDefinitionList contains a list of ExtensionDefinition items
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionList {
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinition>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionList
     */
    extensions: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinition>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionList
     */
    version?: string;
}

/**
 * ExtensionRepositoryReference references a GitHub repo that contains extension definitions
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionReference
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionReference {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionReference
     */
    remote: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionReference
     */
    tag: string;
}

/**
 * ExtensionDefinitionReferenceList contains a list of ExtensionRepository items
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionReferenceList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionReferenceList {
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionReference>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionReferenceList
     */
    remotes: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionDefinitionReference>;
}

/**
 * ExtensionExecution is an executable instance of an extension which can be attached into a pipeline for later execution. It differs from an Extension as it cannot have children and parameters have been resolved to environment variables
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution
     */
    description?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentVariable>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution
     */
    environmentVariables?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentVariable>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution
     */
    given?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution
     */
    namespace?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution
     */
    script?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution
     */
    uuid?: string;
}

/**
 * ExtensionList is a list of Extensions available for a team
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionList {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionList
     */
    apiVersion?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Extension>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionList
     */
    items: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Extension>;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionList
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionList
     */
    metadata: IoK8sApimachineryPkgApisMetaV1ListMeta;
}

/**
 * ExtensionParameter describes a parameter definition for an extension
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionParameter
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionParameter {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionParameter
     */
    defaultValue?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionParameter
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionParameter
     */
    environmentVariableName?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionParameter
     */
    name?: string;
}

/**
 * 
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionParameterValue
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionParameterValue {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionParameterValue
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionParameterValue
     */
    value: string;
}

/**
 * 
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionRepositoryReference
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionRepositoryReference {
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1ChartRef}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionRepositoryReference
     */
    chart?: ComGithubJenkinsXJxPkgApisJenkinsIoV1ChartRef;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionRepositoryReference
     */
    github?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionRepositoryReference
     */
    url?: string;
}

/**
 * 
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionRepositoryReferenceList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionRepositoryReferenceList {
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionRepositoryReference>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionRepositoryReferenceList
     */
    repositories?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionRepositoryReference>;
}

/**
 * ExtensionSpec provides details of an extension available for a team
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionSpec
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionSpec {
    /**
     * 
     * @type {Array<string>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionSpec
     */
    children?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionSpec
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionSpec
     */
    given?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionSpec
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionSpec
     */
    namespace?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionParameter>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionSpec
     */
    parameters?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionParameter>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionSpec
     */
    script?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionSpec
     */
    uuid?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionSpec
     */
    version?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionSpec
     */
    when?: Array<string>;
}

/**
 * Fact represents observed facts. Apps will generate Facts about the system. A naming schema is required since each Fact has a name that's unique for the whole system. Apps should prefix their generated Facts with the name of the App, like <app-name>-<fact>. This makes that different Apps can't possibly have conflicting Fact names.  For an app generating facts on a pipeline, which will be have several different executions, we recommend <app>-<fact>-<pipeline>.
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Fact
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Fact {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Fact
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Fact
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Fact
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Fact
     */
    spec?: ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1FactStatus}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Fact
     */
    status?: ComGithubJenkinsXJxPkgApisJenkinsIoV1FactStatus;
}

/**
 * FactList is a list of Fact resources
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1FactList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1FactList {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1FactList
     */
    apiVersion?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Fact>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1FactList
     */
    items: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Fact>;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1FactList
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1FactList
     */
    metadata: IoK8sApimachineryPkgApisMetaV1ListMeta;
}

/**
 * FactSpec is the specification of a Fact
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec
     */
    factType: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Measurement>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec
     */
    measurements?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Measurement>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec
     */
    name: string;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1Original}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec
     */
    original?: ComGithubJenkinsXJxPkgApisJenkinsIoV1Original;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Statement>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec
     */
    statements?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Statement>;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec
     */
    subject: ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference;
    /**
     * 
     * @type {Array<string>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec
     */
    tags?: Array<string>;
}

/**
 * FactStatus is the status for an Fact resource
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1FactStatus
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1FactStatus {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1FactStatus
     */
    version?: string;
}

/**
 * GitService represents a git provider so we can map the host name to a kinda of git service
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1GitService
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1GitService {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1GitService
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1GitService
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1GitService
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1GitServiceSpec}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1GitService
     */
    spec?: ComGithubJenkinsXJxPkgApisJenkinsIoV1GitServiceSpec;
}

/**
 * GitServiceList is a list of GitService resources
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1GitServiceList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1GitServiceList {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1GitServiceList
     */
    apiVersion?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1GitService>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1GitServiceList
     */
    items: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1GitService>;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1GitServiceList
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1GitServiceList
     */
    metadata: IoK8sApimachineryPkgApisMetaV1ListMeta;
}

/**
 * GitServiceSpec is the specification of an GitService
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1GitServiceSpec
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1GitServiceSpec {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1GitServiceSpec
     */
    gitKind?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1GitServiceSpec
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1GitServiceSpec
     */
    url?: string;
}

/**
 * GitStatus the status of a git commit in terms of CI/CD
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1GitStatus
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1GitStatus {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1GitStatus
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1GitStatus
     */
    url?: string;
}

/**
 * 
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueLabel
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueLabel {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueLabel
     */
    color?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueLabel
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueLabel
     */
    url?: string;
}

/**
 * IssueSummary is the summary of an issue
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueSummary
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueSummary {
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueSummary
     */
    assignees?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueSummary
     */
    body?: string;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueSummary
     */
    closedBy?: ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueSummary
     */
    creationTimestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueSummary
     */
    id?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueLabel>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueSummary
     */
    labels?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueLabel>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueSummary
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueSummary
     */
    state?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueSummary
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueSummary
     */
    url?: string;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueSummary
     */
    user?: ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails;
}

/**
 * Measurement is a percentage or a count, something measured that the system will capture within a fact
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Measurement
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Measurement {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Measurement
     */
    measurementType: string;
    /**
     * 
     * @type {number}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Measurement
     */
    measurementValue: number;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Measurement
     */
    name: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Measurement
     */
    tags?: Array<string>;
}

/**
 * Original contains the report
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Original
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Original {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Original
     */
    mimetype?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Original
     */
    tags?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Original
     */
    url?: string;
}

/**
 * PipelineActivity represents pipeline activity for a particular run of a pipeline
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivity
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivity {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivity
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivity
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivity
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivity
     */
    spec?: ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStatus}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivity
     */
    status?: ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStatus;
}

/**
 * PipelineActivityList is a list of PipelineActivity resources
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityList {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityList
     */
    apiVersion?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivity>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityList
     */
    items: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivity>;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityList
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityList
     */
    metadata: IoK8sApimachineryPkgApisMetaV1ListMeta;
}

/**
 * PipelineActivitySpec is the specification of the pipeline activity
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec {
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Attachment>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    attachments?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Attachment>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    build?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    buildLogsUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    buildUrl?: string;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    completedTimestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    gitBranch?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    gitOwner?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    gitRepository?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    gitUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    lastCommitMessage?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    lastCommitSHA?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    lastCommitURL?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    pipeline?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    postExtensions?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    releaseNotesURL?: string;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    startedTimestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    status?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStep>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    steps?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStep>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    version?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    workflow?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    workflowMessage?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec
     */
    workflowStatus?: string;
}

/**
 * PipelineActivityStatus is the status for an Environment resource
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStatus
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStatus {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStatus
     */
    version?: string;
}

/**
 * PipelineActivityStep represents a step in a pipeline activity
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStep
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStep {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStep
     */
    kind?: string;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewActivityStep}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStep
     */
    preview?: ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewActivityStep;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteActivityStep}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStep
     */
    promote?: ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteActivityStep;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1StageActivityStep}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStep
     */
    stage?: ComGithubJenkinsXJxPkgApisJenkinsIoV1StageActivityStep;
}

/**
 * PipelineStructure contains references to the Pipeline and PipelineRun, and a list of PipelineStructureStages in the pipeline. This allows us to map between a running Pod to its TaskRun, to the TaskRun's Task and PipelineRun, and finally from there to the stage and potential parent stages that the Pod is actually executing, for use with populating PipelineActivity and providing logs.
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructure
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructure {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructure
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructure
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructure
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructure
     */
    pipelineRef: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructure
     */
    pipelineRunRef: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructureStage>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructure
     */
    stages?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructureStage>;
}

/**
 * PipelineStructureList is a list of PipelineStructureList resources
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructureList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructureList {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructureList
     */
    apiVersion?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructure>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructureList
     */
    items: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructure>;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructureList
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructureList
     */
    metadata: IoK8sApimachineryPkgApisMetaV1ListMeta;
}

/**
 * PipelineStructureStage contains the stage's name, one of either a reference to the Task corresponding to the stage if it has steps, a list of sequential stage names nested within this stage, or a list of parallel stage names nested within this stage, and information on this stage's depth within the PipelineStructure as a whole, the name of its parent stage, if any, the name of the stage before it in execution order, if any, and the name of the stage after it in execution order, if any.
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructureStage
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructureStage {
    /**
     * 
     * @type {number}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructureStage
     */
    depth: number;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructureStage
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructureStage
     */
    next?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructureStage
     */
    parallel?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructureStage
     */
    parent?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructureStage
     */
    previous?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructureStage
     */
    stages?: Array<string>;
    /**
     * Must have one of TaskRef+TaskRunRef, Stages, or Parallel
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructureStage
     */
    taskRef?: string;
    /**
     * Populated during pod discovery, not at initial creation time.
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineStructureStage
     */
    taskRunRef?: string;
}

/**
 * Plugin represents a binary plugin installed into this Jenkins X team
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Plugin
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Plugin {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Plugin
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Plugin
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Plugin
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Plugin
     */
    spec?: ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec;
}

/**
 * PluginList is a list of Plugins available for a team
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginList {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginList
     */
    apiVersion?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Plugin>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginList
     */
    items: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Plugin>;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginList
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginList
     */
    metadata: IoK8sApimachineryPkgApisMetaV1ListMeta;
}

/**
 * PluginSpec provides details of a binary plugin available for a team
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec {
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Binary>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec
     */
    binaries?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Binary>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec
     */
    group?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec
     */
    subCommand?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec
     */
    version?: string;
}

/**
 * PreviewActivityStep is the step of creating a preview environment as part of a Pull Request pipeline
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewActivityStep
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewActivityStep {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewActivityStep
     */
    applicationURL?: string;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewActivityStep
     */
    completedTimestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewActivityStep
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewActivityStep
     */
    environment?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewActivityStep
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewActivityStep
     */
    pullRequestURL?: string;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewActivityStep
     */
    startedTimestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewActivityStep
     */
    status?: string;
}

/**
 * PreviewGitSpec is the preview git branch/pull request details
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewGitSpec
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewGitSpec {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewGitSpec
     */
    appName?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewGitSpec
     */
    applicationURL?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewGitSpec
     */
    buildStatus?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewGitSpec
     */
    buildStatusUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewGitSpec
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewGitSpec
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewGitSpec
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewGitSpec
     */
    url?: string;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1UserSpec}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PreviewGitSpec
     */
    user?: ComGithubJenkinsXJxPkgApisJenkinsIoV1UserSpec;
}

/**
 * PromoteActivityStep is the step of promoting a version of an application to an environment
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteActivityStep
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteActivityStep {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteActivityStep
     */
    applicationURL?: string;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteActivityStep
     */
    completedTimestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteActivityStep
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteActivityStep
     */
    environment?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteActivityStep
     */
    name?: string;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1PromotePullRequestStep}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteActivityStep
     */
    pullRequest?: ComGithubJenkinsXJxPkgApisJenkinsIoV1PromotePullRequestStep;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteActivityStep
     */
    startedTimestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteActivityStep
     */
    status?: string;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteUpdateStep}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteActivityStep
     */
    update?: ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteUpdateStep;
}

/**
 * PromotePullRequestStep is the step for promoting a version to an environment by raising a Pull Request on the git repository of the environment
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PromotePullRequestStep
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PromotePullRequestStep {
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromotePullRequestStep
     */
    completedTimestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromotePullRequestStep
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromotePullRequestStep
     */
    mergeCommitSHA?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromotePullRequestStep
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromotePullRequestStep
     */
    pullRequestURL?: string;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromotePullRequestStep
     */
    startedTimestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromotePullRequestStep
     */
    status?: string;
}

/**
 * PromoteUpdateStep is the step for updating a promotion after the Pull Request merges to master
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteUpdateStep
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteUpdateStep {
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteUpdateStep
     */
    completedTimestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteUpdateStep
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteUpdateStep
     */
    name?: string;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteUpdateStep
     */
    startedTimestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteUpdateStep
     */
    status?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1GitStatus>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteUpdateStep
     */
    statuses?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1GitStatus>;
}

/**
 * PromoteWorkflowStep is the step of promoting a version of an application to an environment
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteWorkflowStep
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteWorkflowStep {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteWorkflowStep
     */
    environment?: string;
}

/**
 * QuickStartLocation
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation {
    /**
     * 
     * @type {Array<string>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation
     */
    excludes?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation
     */
    gitKind?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation
     */
    gitUrl?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation
     */
    includes?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation
     */
    owner?: string;
}

/**
 * Release represents a single version of an app that has been released
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Release
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Release {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Release
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Release
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Release
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseSpec}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Release
     */
    spec?: ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseSpec;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseStatus}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Release
     */
    status?: ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseStatus;
}

/**
 * ReleaseList is a list of Release resources
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseList {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseList
     */
    apiVersion?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Release>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseList
     */
    items: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Release>;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseList
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseList
     */
    metadata: IoK8sApimachineryPkgApisMetaV1ListMeta;
}

/**
 * ReleaseSpec is the specification of the Release
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseSpec
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseSpec {
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseSpec
     */
    commits?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseSpec
     */
    gitCloneUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseSpec
     */
    gitHttpUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseSpec
     */
    gitOwner?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseSpec
     */
    gitRepository?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueSummary>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseSpec
     */
    issues?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueSummary>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseSpec
     */
    name?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueSummary>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseSpec
     */
    pullRequests?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1IssueSummary>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseSpec
     */
    releaseNotesURL?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseSpec
     */
    version?: string;
}

/**
 * ReleaseStatus is the status of a release
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseStatus
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseStatus {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ReleaseStatus
     */
    status?: string;
}

/**
 * 
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference {
    /**
     * API version of the referent.
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference
     */
    apiVersion?: string;
    /**
     * Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference
     */
    kind: string;
    /**
     * Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference
     */
    name: string;
    /**
     * UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference
     */
    uid?: string;
}

/**
 * SourceRepository is the metadata for an Application/Project/SourceRepository
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepository
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepository {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepository
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepository
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepository
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepositorySpec}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepository
     */
    spec?: ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepositorySpec;
}

/**
 * SourceRepositoryList is a structure used by k8s to store lists of apps
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepositoryList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepositoryList {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepositoryList
     */
    apiVersion?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepository>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepositoryList
     */
    items: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepository>;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepositoryList
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepositoryList
     */
    metadata: IoK8sApimachineryPkgApisMetaV1ListMeta;
}

/**
 * SourceRepositorySpec provides details of the metadata for an App
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepositorySpec
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepositorySpec {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepositorySpec
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepositorySpec
     */
    org?: string;
    /**
     * Provider stores the URL of the git provider such as https://github.com
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepositorySpec
     */
    provider?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1SourceRepositorySpec
     */
    repo?: string;
}

/**
 * StageActivityStep represents a stage of zero to more sub steps in a jenkins pipeline
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1StageActivityStep
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1StageActivityStep {
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1StageActivityStep
     */
    completedTimestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1StageActivityStep
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1StageActivityStep
     */
    name?: string;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1StageActivityStep
     */
    startedTimestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1StageActivityStep
     */
    status?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1CoreActivityStep>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1StageActivityStep
     */
    steps?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1CoreActivityStep>;
}

/**
 * Statement represents a decision that was made, for example that a promotion was approved or denied
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Statement
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Statement {
    /**
     * 
     * @type {boolean}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Statement
     */
    measurementValue: boolean;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Statement
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Statement
     */
    statementType: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Statement
     */
    tags?: Array<string>;
}

/**
 * StorageLocation
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1StorageLocation
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1StorageLocation {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1StorageLocation
     */
    bucketUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1StorageLocation
     */
    classifier?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1StorageLocation
     */
    gitBranch?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1StorageLocation
     */
    gitUrl?: string;
}

/**
 * Team represents a request to create an actual Team which is a group of users, a development environment and optional other environments
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Team
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Team {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Team
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Team
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Team
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSpec}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Team
     */
    spec?: ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSpec;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamStatus}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Team
     */
    status?: ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamStatus;
}

/**
 * TeamList is a list of TypeMeta resources
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamList {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamList
     */
    apiVersion?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Team>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamList
     */
    items: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Team>;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamList
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamList
     */
    metadata: IoK8sApimachineryPkgApisMetaV1ListMeta;
}

/**
 * TeamSettings the default settings for a team
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    appsRepository?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    askOnCreate?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    branchPatterns?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    buildPackName?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    buildPackRef?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    buildPackUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    dockerRegistryOrg?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    envOrganisation?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    forkBranchPatterns?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    gitPrivate?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    gitServer?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    helmBinary?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    helmTemplate?: boolean;
    /**
     * ImportMode indicates what kind of
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    importMode?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    kubeProvider?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    noTiller?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    organisation?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    pipelineUsername?: string;
    /**
     * 
     * @type {Array<IoK8sApiBatchV1Job>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    postPreviewJobs?: Array<IoK8sApiBatchV1Job>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    promotionEngine?: string;
    /**
     * ProwEngine is the kind of prow engine used such as knative build or build pipeline
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    prowEngine?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    quickstartLocations?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation>;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1StorageLocation>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    storageLocations?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1StorageLocation>;
    /**
     * 
     * @type {boolean}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSettings
     */
    useGitOps?: boolean;
}

/**
 * TeamSpec is the specification of an Team
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSpec
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSpec {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSpec
     */
    kind?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSpec
     */
    label?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamSpec
     */
    members?: Array<string>;
}

/**
 * TeamStatus is the status for an Team resource
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamStatus
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamStatus {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamStatus
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1TeamStatus
     */
    provisionStatus?: string;
}

/**
 * User represents a git user so we have a cache to find by email address
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1User
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1User {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1User
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1User
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1User
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1User
     */
    spec?: ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1User
     */
    user?: ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails;
}

/**
 * UserDetails containers details of a user
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails {
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1AccountReference>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails
     */
    accountReference?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1AccountReference>;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails
     */
    avatarUrl?: string;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails
     */
    creationTimestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails
     */
    email?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails
     */
    externalUser?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails
     */
    login?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails
     */
    serviceAccount?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails
     */
    url?: string;
}

/**
 * UserList is a list of User resources
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1UserList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1UserList {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1UserList
     */
    apiVersion?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1User>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1UserList
     */
    items: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1User>;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1UserList
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1UserList
     */
    metadata: IoK8sApimachineryPkgApisMetaV1ListMeta;
}

/**
 * UserSpec is the user details
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1UserSpec
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1UserSpec {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1UserSpec
     */
    imageUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1UserSpec
     */
    linkUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1UserSpec
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1UserSpec
     */
    username?: string;
}

/**
 * Workflow represents pipeline activity for a particular run of a pipeline
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Workflow
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1Workflow {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Workflow
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Workflow
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Workflow
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowSpec}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Workflow
     */
    spec?: ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowSpec;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowStatus}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1Workflow
     */
    status?: ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowStatus;
}

/**
 * WorkflowList is a list of Workflow resources
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowList
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowList {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowList
     */
    apiVersion?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Workflow>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowList
     */
    items: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1Workflow>;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowList
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowList
     */
    metadata: IoK8sApimachineryPkgApisMetaV1ListMeta;
}

/**
 * WorkflowPreconditions is the trigger to start a step
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowPreconditions
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowPreconditions {
    /**
     * the names of the environments which need to have promoted before this step can be triggered
     * @type {Array<string>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowPreconditions
     */
    environments?: Array<string>;
}

/**
 * WorkflowSpec is the specification of the pipeline activity
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowSpec
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowSpec {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowSpec
     */
    pipeline?: string;
    /**
     * 
     * @type {Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowStep>}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowSpec
     */
    steps?: Array<ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowStep>;
}

/**
 * WorkflowStatus is the status for an Environment resource
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowStatus
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowStatus {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowStatus
     */
    version?: string;
}

/**
 * WorkflowStep represents a step in a pipeline activity
 * @export
 * @interface ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowStep
 */
export interface ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowStep {
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowStep
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowStep
     */
    kind?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowStep
     */
    name?: string;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteWorkflowStep}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowStep
     */
    promote?: ComGithubJenkinsXJxPkgApisJenkinsIoV1PromoteWorkflowStep;
    /**
     * 
     * @type {ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowPreconditions}
     * @memberof ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowStep
     */
    trigger?: ComGithubJenkinsXJxPkgApisJenkinsIoV1WorkflowPreconditions;
}

/**
 * Job represents the configuration of a single job.
 * @export
 * @interface IoK8sApiBatchV1Job
 */
export interface IoK8sApiBatchV1Job {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof IoK8sApiBatchV1Job
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof IoK8sApiBatchV1Job
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof IoK8sApiBatchV1Job
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {IoK8sApiBatchV1JobSpec}
     * @memberof IoK8sApiBatchV1Job
     */
    spec?: IoK8sApiBatchV1JobSpec;
    /**
     * 
     * @type {IoK8sApiBatchV1JobStatus}
     * @memberof IoK8sApiBatchV1Job
     */
    status?: IoK8sApiBatchV1JobStatus;
}

/**
 * JobCondition describes current state of a job.
 * @export
 * @interface IoK8sApiBatchV1JobCondition
 */
export interface IoK8sApiBatchV1JobCondition {
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof IoK8sApiBatchV1JobCondition
     */
    lastProbeTime?: Date;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof IoK8sApiBatchV1JobCondition
     */
    lastTransitionTime?: Date;
    /**
     * Human readable message indicating details about last transition.
     * @type {string}
     * @memberof IoK8sApiBatchV1JobCondition
     */
    message?: string;
    /**
     * (brief) reason for the condition's last transition.
     * @type {string}
     * @memberof IoK8sApiBatchV1JobCondition
     */
    reason?: string;
    /**
     * Status of the condition, one of True, False, Unknown.
     * @type {string}
     * @memberof IoK8sApiBatchV1JobCondition
     */
    status: string;
    /**
     * Type of job condition, Complete or Failed.
     * @type {string}
     * @memberof IoK8sApiBatchV1JobCondition
     */
    type: string;
}

/**
 * JobSpec describes how the job execution will look like.
 * @export
 * @interface IoK8sApiBatchV1JobSpec
 */
export interface IoK8sApiBatchV1JobSpec {
    /**
     * Specifies the duration in seconds relative to the startTime that the job may be active before the system tries to terminate it; value must be positive integer
     * @type {number}
     * @memberof IoK8sApiBatchV1JobSpec
     */
    activeDeadlineSeconds?: number;
    /**
     * Specifies the number of retries before marking this job failed. Defaults to 6
     * @type {number}
     * @memberof IoK8sApiBatchV1JobSpec
     */
    backoffLimit?: number;
    /**
     * Specifies the desired number of successfully finished pods the job should be run with.  Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
     * @type {number}
     * @memberof IoK8sApiBatchV1JobSpec
     */
    completions?: number;
    /**
     * manualSelector controls generation of pod labels and pod selectors. Leave `manualSelector` unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template.  When true, the user is responsible for picking unique labels and specifying the selector.  Failure to pick a unique label may cause this and other jobs to not function correctly.  However, You may see `manualSelector=true` in jobs that were created with the old `extensions/v1beta1` API. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector
     * @type {boolean}
     * @memberof IoK8sApiBatchV1JobSpec
     */
    manualSelector?: boolean;
    /**
     * Specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
     * @type {number}
     * @memberof IoK8sApiBatchV1JobSpec
     */
    parallelism?: number;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1LabelSelector}
     * @memberof IoK8sApiBatchV1JobSpec
     */
    selector?: IoK8sApimachineryPkgApisMetaV1LabelSelector;
    /**
     * 
     * @type {IoK8sApiCoreV1PodTemplateSpec}
     * @memberof IoK8sApiBatchV1JobSpec
     */
    template: IoK8sApiCoreV1PodTemplateSpec;
    /**
     * ttlSecondsAfterFinished limits the lifetime of a Job that has finished execution (either Complete or Failed). If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted. When the Job is being deleted, its lifecycle guarantees (e.g. finalizers) will be honored. If this field is unset, the Job won't be automatically deleted. If this field is set to zero, the Job becomes eligible to be deleted immediately after it finishes. This field is alpha-level and is only honored by servers that enable the TTLAfterFinished feature.
     * @type {number}
     * @memberof IoK8sApiBatchV1JobSpec
     */
    ttlSecondsAfterFinished?: number;
}

/**
 * JobStatus represents the current state of a Job.
 * @export
 * @interface IoK8sApiBatchV1JobStatus
 */
export interface IoK8sApiBatchV1JobStatus {
    /**
     * The number of actively running pods.
     * @type {number}
     * @memberof IoK8sApiBatchV1JobStatus
     */
    active?: number;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof IoK8sApiBatchV1JobStatus
     */
    completionTime?: Date;
    /**
     * The latest available observations of an object's current state. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
     * @type {Array<IoK8sApiBatchV1JobCondition>}
     * @memberof IoK8sApiBatchV1JobStatus
     */
    conditions?: Array<IoK8sApiBatchV1JobCondition>;
    /**
     * The number of pods which reached phase Failed.
     * @type {number}
     * @memberof IoK8sApiBatchV1JobStatus
     */
    failed?: number;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof IoK8sApiBatchV1JobStatus
     */
    startTime?: Date;
    /**
     * The number of pods which reached phase Succeeded.
     * @type {number}
     * @memberof IoK8sApiBatchV1JobStatus
     */
    succeeded?: number;
}

/**
 * Represents a Persistent Disk resource in AWS.  An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
 * @export
 * @interface IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource
 */
export interface IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource {
    /**
     * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
     * @type {string}
     * @memberof IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource
     */
    fsType?: string;
    /**
     * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).
     * @type {number}
     * @memberof IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource
     */
    partition?: number;
    /**
     * Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
     * @type {boolean}
     * @memberof IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource
     */
    readOnly?: boolean;
    /**
     * Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
     * @type {string}
     * @memberof IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource
     */
    volumeID: string;
}

/**
 * Affinity is a group of affinity scheduling rules.
 * @export
 * @interface IoK8sApiCoreV1Affinity
 */
export interface IoK8sApiCoreV1Affinity {
    /**
     * 
     * @type {IoK8sApiCoreV1NodeAffinity}
     * @memberof IoK8sApiCoreV1Affinity
     */
    nodeAffinity?: IoK8sApiCoreV1NodeAffinity;
    /**
     * 
     * @type {IoK8sApiCoreV1PodAffinity}
     * @memberof IoK8sApiCoreV1Affinity
     */
    podAffinity?: IoK8sApiCoreV1PodAffinity;
    /**
     * 
     * @type {IoK8sApiCoreV1PodAntiAffinity}
     * @memberof IoK8sApiCoreV1Affinity
     */
    podAntiAffinity?: IoK8sApiCoreV1PodAntiAffinity;
}

/**
 * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
 * @export
 * @interface IoK8sApiCoreV1AzureDiskVolumeSource
 */
export interface IoK8sApiCoreV1AzureDiskVolumeSource {
    /**
     * Host Caching mode: None, Read Only, Read Write.
     * @type {string}
     * @memberof IoK8sApiCoreV1AzureDiskVolumeSource
     */
    cachingMode?: string;
    /**
     * The Name of the data disk in the blob storage
     * @type {string}
     * @memberof IoK8sApiCoreV1AzureDiskVolumeSource
     */
    diskName: string;
    /**
     * The URI the data disk in the blob storage
     * @type {string}
     * @memberof IoK8sApiCoreV1AzureDiskVolumeSource
     */
    diskURI: string;
    /**
     * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.
     * @type {string}
     * @memberof IoK8sApiCoreV1AzureDiskVolumeSource
     */
    fsType?: string;
    /**
     * Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
     * @type {string}
     * @memberof IoK8sApiCoreV1AzureDiskVolumeSource
     */
    kind?: string;
    /**
     * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1AzureDiskVolumeSource
     */
    readOnly?: boolean;
}

/**
 * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
 * @export
 * @interface IoK8sApiCoreV1AzureFileVolumeSource
 */
export interface IoK8sApiCoreV1AzureFileVolumeSource {
    /**
     * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1AzureFileVolumeSource
     */
    readOnly?: boolean;
    /**
     * the name of secret that contains Azure Storage Account Name and Key
     * @type {string}
     * @memberof IoK8sApiCoreV1AzureFileVolumeSource
     */
    secretName: string;
    /**
     * Share Name
     * @type {string}
     * @memberof IoK8sApiCoreV1AzureFileVolumeSource
     */
    shareName: string;
}

/**
 * Adds and removes POSIX capabilities from running containers.
 * @export
 * @interface IoK8sApiCoreV1Capabilities
 */
export interface IoK8sApiCoreV1Capabilities {
    /**
     * Added capabilities
     * @type {Array<string>}
     * @memberof IoK8sApiCoreV1Capabilities
     */
    add?: Array<string>;
    /**
     * Removed capabilities
     * @type {Array<string>}
     * @memberof IoK8sApiCoreV1Capabilities
     */
    drop?: Array<string>;
}

/**
 * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
 * @export
 * @interface IoK8sApiCoreV1CephFSVolumeSource
 */
export interface IoK8sApiCoreV1CephFSVolumeSource {
    /**
     * Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
     * @type {Array<string>}
     * @memberof IoK8sApiCoreV1CephFSVolumeSource
     */
    monitors: Array<string>;
    /**
     * Optional: Used as the mounted root, rather than the full Ceph tree, default is /
     * @type {string}
     * @memberof IoK8sApiCoreV1CephFSVolumeSource
     */
    path?: string;
    /**
     * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
     * @type {boolean}
     * @memberof IoK8sApiCoreV1CephFSVolumeSource
     */
    readOnly?: boolean;
    /**
     * Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
     * @type {string}
     * @memberof IoK8sApiCoreV1CephFSVolumeSource
     */
    secretFile?: string;
    /**
     * 
     * @type {IoK8sApiCoreV1LocalObjectReference}
     * @memberof IoK8sApiCoreV1CephFSVolumeSource
     */
    secretRef?: IoK8sApiCoreV1LocalObjectReference;
    /**
     * Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
     * @type {string}
     * @memberof IoK8sApiCoreV1CephFSVolumeSource
     */
    user?: string;
}

/**
 * Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
 * @export
 * @interface IoK8sApiCoreV1CinderVolumeSource
 */
export interface IoK8sApiCoreV1CinderVolumeSource {
    /**
     * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
     * @type {string}
     * @memberof IoK8sApiCoreV1CinderVolumeSource
     */
    fsType?: string;
    /**
     * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
     * @type {boolean}
     * @memberof IoK8sApiCoreV1CinderVolumeSource
     */
    readOnly?: boolean;
    /**
     * 
     * @type {IoK8sApiCoreV1LocalObjectReference}
     * @memberof IoK8sApiCoreV1CinderVolumeSource
     */
    secretRef?: IoK8sApiCoreV1LocalObjectReference;
    /**
     * volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
     * @type {string}
     * @memberof IoK8sApiCoreV1CinderVolumeSource
     */
    volumeID: string;
}

/**
 * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.  The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
 * @export
 * @interface IoK8sApiCoreV1ConfigMapEnvSource
 */
export interface IoK8sApiCoreV1ConfigMapEnvSource {
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
     * @type {string}
     * @memberof IoK8sApiCoreV1ConfigMapEnvSource
     */
    name?: string;
    /**
     * Specify whether the ConfigMap must be defined
     * @type {boolean}
     * @memberof IoK8sApiCoreV1ConfigMapEnvSource
     */
    optional?: boolean;
}

/**
 * Selects a key from a ConfigMap.
 * @export
 * @interface IoK8sApiCoreV1ConfigMapKeySelector
 */
export interface IoK8sApiCoreV1ConfigMapKeySelector {
    /**
     * The key to select.
     * @type {string}
     * @memberof IoK8sApiCoreV1ConfigMapKeySelector
     */
    key: string;
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
     * @type {string}
     * @memberof IoK8sApiCoreV1ConfigMapKeySelector
     */
    name?: string;
    /**
     * Specify whether the ConfigMap or it's key must be defined
     * @type {boolean}
     * @memberof IoK8sApiCoreV1ConfigMapKeySelector
     */
    optional?: boolean;
}

/**
 * Adapts a ConfigMap into a projected volume.  The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
 * @export
 * @interface IoK8sApiCoreV1ConfigMapProjection
 */
export interface IoK8sApiCoreV1ConfigMapProjection {
    /**
     * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
     * @type {Array<IoK8sApiCoreV1KeyToPath>}
     * @memberof IoK8sApiCoreV1ConfigMapProjection
     */
    items?: Array<IoK8sApiCoreV1KeyToPath>;
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
     * @type {string}
     * @memberof IoK8sApiCoreV1ConfigMapProjection
     */
    name?: string;
    /**
     * Specify whether the ConfigMap or it's keys must be defined
     * @type {boolean}
     * @memberof IoK8sApiCoreV1ConfigMapProjection
     */
    optional?: boolean;
}

/**
 * Adapts a ConfigMap into a volume.  The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
 * @export
 * @interface IoK8sApiCoreV1ConfigMapVolumeSource
 */
export interface IoK8sApiCoreV1ConfigMapVolumeSource {
    /**
     * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
     * @type {number}
     * @memberof IoK8sApiCoreV1ConfigMapVolumeSource
     */
    defaultMode?: number;
    /**
     * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
     * @type {Array<IoK8sApiCoreV1KeyToPath>}
     * @memberof IoK8sApiCoreV1ConfigMapVolumeSource
     */
    items?: Array<IoK8sApiCoreV1KeyToPath>;
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
     * @type {string}
     * @memberof IoK8sApiCoreV1ConfigMapVolumeSource
     */
    name?: string;
    /**
     * Specify whether the ConfigMap or it's keys must be defined
     * @type {boolean}
     * @memberof IoK8sApiCoreV1ConfigMapVolumeSource
     */
    optional?: boolean;
}

/**
 * A single application container that you want to run within a pod.
 * @export
 * @interface IoK8sApiCoreV1Container
 */
export interface IoK8sApiCoreV1Container {
    /**
     * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
     * @type {Array<string>}
     * @memberof IoK8sApiCoreV1Container
     */
    args?: Array<string>;
    /**
     * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
     * @type {Array<string>}
     * @memberof IoK8sApiCoreV1Container
     */
    command?: Array<string>;
    /**
     * List of environment variables to set in the container. Cannot be updated.
     * @type {Array<IoK8sApiCoreV1EnvVar>}
     * @memberof IoK8sApiCoreV1Container
     */
    env?: Array<IoK8sApiCoreV1EnvVar>;
    /**
     * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
     * @type {Array<IoK8sApiCoreV1EnvFromSource>}
     * @memberof IoK8sApiCoreV1Container
     */
    envFrom?: Array<IoK8sApiCoreV1EnvFromSource>;
    /**
     * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
     * @type {string}
     * @memberof IoK8sApiCoreV1Container
     */
    image?: string;
    /**
     * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
     * @type {string}
     * @memberof IoK8sApiCoreV1Container
     */
    imagePullPolicy?: string;
    /**
     * 
     * @type {IoK8sApiCoreV1Lifecycle}
     * @memberof IoK8sApiCoreV1Container
     */
    lifecycle?: IoK8sApiCoreV1Lifecycle;
    /**
     * 
     * @type {IoK8sApiCoreV1Probe}
     * @memberof IoK8sApiCoreV1Container
     */
    livenessProbe?: IoK8sApiCoreV1Probe;
    /**
     * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
     * @type {string}
     * @memberof IoK8sApiCoreV1Container
     */
    name: string;
    /**
     * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.
     * @type {Array<IoK8sApiCoreV1ContainerPort>}
     * @memberof IoK8sApiCoreV1Container
     */
    ports?: Array<IoK8sApiCoreV1ContainerPort>;
    /**
     * 
     * @type {IoK8sApiCoreV1Probe}
     * @memberof IoK8sApiCoreV1Container
     */
    readinessProbe?: IoK8sApiCoreV1Probe;
    /**
     * 
     * @type {IoK8sApiCoreV1ResourceRequirements}
     * @memberof IoK8sApiCoreV1Container
     */
    resources?: IoK8sApiCoreV1ResourceRequirements;
    /**
     * 
     * @type {IoK8sApiCoreV1SecurityContext}
     * @memberof IoK8sApiCoreV1Container
     */
    securityContext?: IoK8sApiCoreV1SecurityContext;
    /**
     * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1Container
     */
    stdin?: boolean;
    /**
     * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
     * @type {boolean}
     * @memberof IoK8sApiCoreV1Container
     */
    stdinOnce?: boolean;
    /**
     * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
     * @type {string}
     * @memberof IoK8sApiCoreV1Container
     */
    terminationMessagePath?: string;
    /**
     * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
     * @type {string}
     * @memberof IoK8sApiCoreV1Container
     */
    terminationMessagePolicy?: string;
    /**
     * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1Container
     */
    tty?: boolean;
    /**
     * volumeDevices is the list of block devices to be used by the container. This is an alpha feature and may change in the future.
     * @type {Array<IoK8sApiCoreV1VolumeDevice>}
     * @memberof IoK8sApiCoreV1Container
     */
    volumeDevices?: Array<IoK8sApiCoreV1VolumeDevice>;
    /**
     * Pod volumes to mount into the container's filesystem. Cannot be updated.
     * @type {Array<IoK8sApiCoreV1VolumeMount>}
     * @memberof IoK8sApiCoreV1Container
     */
    volumeMounts?: Array<IoK8sApiCoreV1VolumeMount>;
    /**
     * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
     * @type {string}
     * @memberof IoK8sApiCoreV1Container
     */
    workingDir?: string;
}

/**
 * ContainerPort represents a network port in a single container.
 * @export
 * @interface IoK8sApiCoreV1ContainerPort
 */
export interface IoK8sApiCoreV1ContainerPort {
    /**
     * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
     * @type {number}
     * @memberof IoK8sApiCoreV1ContainerPort
     */
    containerPort: number;
    /**
     * What host IP to bind the external port to.
     * @type {string}
     * @memberof IoK8sApiCoreV1ContainerPort
     */
    hostIP?: string;
    /**
     * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
     * @type {number}
     * @memberof IoK8sApiCoreV1ContainerPort
     */
    hostPort?: number;
    /**
     * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
     * @type {string}
     * @memberof IoK8sApiCoreV1ContainerPort
     */
    name?: string;
    /**
     * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".
     * @type {string}
     * @memberof IoK8sApiCoreV1ContainerPort
     */
    protocol?: string;
}

/**
 * Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
 * @export
 * @interface IoK8sApiCoreV1DownwardAPIProjection
 */
export interface IoK8sApiCoreV1DownwardAPIProjection {
    /**
     * Items is a list of DownwardAPIVolume file
     * @type {Array<IoK8sApiCoreV1DownwardAPIVolumeFile>}
     * @memberof IoK8sApiCoreV1DownwardAPIProjection
     */
    items?: Array<IoK8sApiCoreV1DownwardAPIVolumeFile>;
}

/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 * @export
 * @interface IoK8sApiCoreV1DownwardAPIVolumeFile
 */
export interface IoK8sApiCoreV1DownwardAPIVolumeFile {
    /**
     * 
     * @type {IoK8sApiCoreV1ObjectFieldSelector}
     * @memberof IoK8sApiCoreV1DownwardAPIVolumeFile
     */
    fieldRef?: IoK8sApiCoreV1ObjectFieldSelector;
    /**
     * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
     * @type {number}
     * @memberof IoK8sApiCoreV1DownwardAPIVolumeFile
     */
    mode?: number;
    /**
     * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
     * @type {string}
     * @memberof IoK8sApiCoreV1DownwardAPIVolumeFile
     */
    path: string;
    /**
     * 
     * @type {IoK8sApiCoreV1ResourceFieldSelector}
     * @memberof IoK8sApiCoreV1DownwardAPIVolumeFile
     */
    resourceFieldRef?: IoK8sApiCoreV1ResourceFieldSelector;
}

/**
 * DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
 * @export
 * @interface IoK8sApiCoreV1DownwardAPIVolumeSource
 */
export interface IoK8sApiCoreV1DownwardAPIVolumeSource {
    /**
     * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
     * @type {number}
     * @memberof IoK8sApiCoreV1DownwardAPIVolumeSource
     */
    defaultMode?: number;
    /**
     * Items is a list of downward API volume file
     * @type {Array<IoK8sApiCoreV1DownwardAPIVolumeFile>}
     * @memberof IoK8sApiCoreV1DownwardAPIVolumeSource
     */
    items?: Array<IoK8sApiCoreV1DownwardAPIVolumeFile>;
}

/**
 * Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
 * @export
 * @interface IoK8sApiCoreV1EmptyDirVolumeSource
 */
export interface IoK8sApiCoreV1EmptyDirVolumeSource {
    /**
     * What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
     * @type {string}
     * @memberof IoK8sApiCoreV1EmptyDirVolumeSource
     */
    medium?: string;
    /**
     * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.  The serialization format is:  <quantity>        ::= <signedNumber><suffix>   (Note that <suffix> may be empty, from the \"\" case in <decimalSI>.) <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html) <decimalSI>       ::= m | \"\" | k | M | G | T | P | E   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.) <decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>  No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.  When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.  Before serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:   a. No precision is lost   b. No fractional digits will be emitted   c. The exponent (or suffix) is as large as possible. The sign will be omitted unless the number is negative.  Examples:   1.5 will be serialized as \"1500m\"   1.5Gi will be serialized as \"1536Mi\"  Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.  Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)  This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
     * @type {string}
     * @memberof IoK8sApiCoreV1EmptyDirVolumeSource
     */
    sizeLimit?: string;
}

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 * @export
 * @interface IoK8sApiCoreV1EnvFromSource
 */
export interface IoK8sApiCoreV1EnvFromSource {
    /**
     * 
     * @type {IoK8sApiCoreV1ConfigMapEnvSource}
     * @memberof IoK8sApiCoreV1EnvFromSource
     */
    configMapRef?: IoK8sApiCoreV1ConfigMapEnvSource;
    /**
     * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
     * @type {string}
     * @memberof IoK8sApiCoreV1EnvFromSource
     */
    prefix?: string;
    /**
     * 
     * @type {IoK8sApiCoreV1SecretEnvSource}
     * @memberof IoK8sApiCoreV1EnvFromSource
     */
    secretRef?: IoK8sApiCoreV1SecretEnvSource;
}

/**
 * EnvVar represents an environment variable present in a Container.
 * @export
 * @interface IoK8sApiCoreV1EnvVar
 */
export interface IoK8sApiCoreV1EnvVar {
    /**
     * Name of the environment variable. Must be a C_IDENTIFIER.
     * @type {string}
     * @memberof IoK8sApiCoreV1EnvVar
     */
    name: string;
    /**
     * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".
     * @type {string}
     * @memberof IoK8sApiCoreV1EnvVar
     */
    value?: string;
    /**
     * 
     * @type {IoK8sApiCoreV1EnvVarSource}
     * @memberof IoK8sApiCoreV1EnvVar
     */
    valueFrom?: IoK8sApiCoreV1EnvVarSource;
}

/**
 * EnvVarSource represents a source for the value of an EnvVar.
 * @export
 * @interface IoK8sApiCoreV1EnvVarSource
 */
export interface IoK8sApiCoreV1EnvVarSource {
    /**
     * 
     * @type {IoK8sApiCoreV1ConfigMapKeySelector}
     * @memberof IoK8sApiCoreV1EnvVarSource
     */
    configMapKeyRef?: IoK8sApiCoreV1ConfigMapKeySelector;
    /**
     * 
     * @type {IoK8sApiCoreV1ObjectFieldSelector}
     * @memberof IoK8sApiCoreV1EnvVarSource
     */
    fieldRef?: IoK8sApiCoreV1ObjectFieldSelector;
    /**
     * 
     * @type {IoK8sApiCoreV1ResourceFieldSelector}
     * @memberof IoK8sApiCoreV1EnvVarSource
     */
    resourceFieldRef?: IoK8sApiCoreV1ResourceFieldSelector;
    /**
     * 
     * @type {IoK8sApiCoreV1SecretKeySelector}
     * @memberof IoK8sApiCoreV1EnvVarSource
     */
    secretKeyRef?: IoK8sApiCoreV1SecretKeySelector;
}

/**
 * ExecAction describes a \"run in container\" action.
 * @export
 * @interface IoK8sApiCoreV1ExecAction
 */
export interface IoK8sApiCoreV1ExecAction {
    /**
     * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
     * @type {Array<string>}
     * @memberof IoK8sApiCoreV1ExecAction
     */
    command?: Array<string>;
}

/**
 * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
 * @export
 * @interface IoK8sApiCoreV1FCVolumeSource
 */
export interface IoK8sApiCoreV1FCVolumeSource {
    /**
     * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.
     * @type {string}
     * @memberof IoK8sApiCoreV1FCVolumeSource
     */
    fsType?: string;
    /**
     * Optional: FC target lun number
     * @type {number}
     * @memberof IoK8sApiCoreV1FCVolumeSource
     */
    lun?: number;
    /**
     * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1FCVolumeSource
     */
    readOnly?: boolean;
    /**
     * Optional: FC target worldwide names (WWNs)
     * @type {Array<string>}
     * @memberof IoK8sApiCoreV1FCVolumeSource
     */
    targetWWNs?: Array<string>;
    /**
     * Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
     * @type {Array<string>}
     * @memberof IoK8sApiCoreV1FCVolumeSource
     */
    wwids?: Array<string>;
}

/**
 * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
 * @export
 * @interface IoK8sApiCoreV1FlexVolumeSource
 */
export interface IoK8sApiCoreV1FlexVolumeSource {
    /**
     * Driver is the name of the driver to use for this volume.
     * @type {string}
     * @memberof IoK8sApiCoreV1FlexVolumeSource
     */
    driver: string;
    /**
     * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.
     * @type {string}
     * @memberof IoK8sApiCoreV1FlexVolumeSource
     */
    fsType?: string;
    /**
     * Optional: Extra command options if any.
     * @type {{ [key: string]: string; }}
     * @memberof IoK8sApiCoreV1FlexVolumeSource
     */
    options?: { [key: string]: string; };
    /**
     * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1FlexVolumeSource
     */
    readOnly?: boolean;
    /**
     * 
     * @type {IoK8sApiCoreV1LocalObjectReference}
     * @memberof IoK8sApiCoreV1FlexVolumeSource
     */
    secretRef?: IoK8sApiCoreV1LocalObjectReference;
}

/**
 * Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
 * @export
 * @interface IoK8sApiCoreV1FlockerVolumeSource
 */
export interface IoK8sApiCoreV1FlockerVolumeSource {
    /**
     * Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
     * @type {string}
     * @memberof IoK8sApiCoreV1FlockerVolumeSource
     */
    datasetName?: string;
    /**
     * UUID of the dataset. This is unique identifier of a Flocker dataset
     * @type {string}
     * @memberof IoK8sApiCoreV1FlockerVolumeSource
     */
    datasetUUID?: string;
}

/**
 * Represents a Persistent Disk resource in Google Compute Engine.  A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
 * @export
 * @interface IoK8sApiCoreV1GCEPersistentDiskVolumeSource
 */
export interface IoK8sApiCoreV1GCEPersistentDiskVolumeSource {
    /**
     * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
     * @type {string}
     * @memberof IoK8sApiCoreV1GCEPersistentDiskVolumeSource
     */
    fsType?: string;
    /**
     * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
     * @type {number}
     * @memberof IoK8sApiCoreV1GCEPersistentDiskVolumeSource
     */
    partition?: number;
    /**
     * Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
     * @type {string}
     * @memberof IoK8sApiCoreV1GCEPersistentDiskVolumeSource
     */
    pdName: string;
    /**
     * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
     * @type {boolean}
     * @memberof IoK8sApiCoreV1GCEPersistentDiskVolumeSource
     */
    readOnly?: boolean;
}

/**
 * Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.  DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
 * @export
 * @interface IoK8sApiCoreV1GitRepoVolumeSource
 */
export interface IoK8sApiCoreV1GitRepoVolumeSource {
    /**
     * Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
     * @type {string}
     * @memberof IoK8sApiCoreV1GitRepoVolumeSource
     */
    directory?: string;
    /**
     * Repository URL
     * @type {string}
     * @memberof IoK8sApiCoreV1GitRepoVolumeSource
     */
    repository: string;
    /**
     * Commit hash for the specified revision.
     * @type {string}
     * @memberof IoK8sApiCoreV1GitRepoVolumeSource
     */
    revision?: string;
}

/**
 * Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
 * @export
 * @interface IoK8sApiCoreV1GlusterfsVolumeSource
 */
export interface IoK8sApiCoreV1GlusterfsVolumeSource {
    /**
     * EndpointsName is the endpoint name that details Glusterfs topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
     * @type {string}
     * @memberof IoK8sApiCoreV1GlusterfsVolumeSource
     */
    endpoints: string;
    /**
     * Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
     * @type {string}
     * @memberof IoK8sApiCoreV1GlusterfsVolumeSource
     */
    path: string;
    /**
     * ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
     * @type {boolean}
     * @memberof IoK8sApiCoreV1GlusterfsVolumeSource
     */
    readOnly?: boolean;
}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 * @export
 * @interface IoK8sApiCoreV1HTTPGetAction
 */
export interface IoK8sApiCoreV1HTTPGetAction {
    /**
     * Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.
     * @type {string}
     * @memberof IoK8sApiCoreV1HTTPGetAction
     */
    host?: string;
    /**
     * Custom headers to set in the request. HTTP allows repeated headers.
     * @type {Array<IoK8sApiCoreV1HTTPHeader>}
     * @memberof IoK8sApiCoreV1HTTPGetAction
     */
    httpHeaders?: Array<IoK8sApiCoreV1HTTPHeader>;
    /**
     * Path to access on the HTTP server.
     * @type {string}
     * @memberof IoK8sApiCoreV1HTTPGetAction
     */
    path?: string;
    /**
     * IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
     * @type {string}
     * @memberof IoK8sApiCoreV1HTTPGetAction
     */
    port: string;
    /**
     * Scheme to use for connecting to the host. Defaults to HTTP.
     * @type {string}
     * @memberof IoK8sApiCoreV1HTTPGetAction
     */
    scheme?: string;
}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 * @export
 * @interface IoK8sApiCoreV1HTTPHeader
 */
export interface IoK8sApiCoreV1HTTPHeader {
    /**
     * The header field name
     * @type {string}
     * @memberof IoK8sApiCoreV1HTTPHeader
     */
    name: string;
    /**
     * The header field value
     * @type {string}
     * @memberof IoK8sApiCoreV1HTTPHeader
     */
    value: string;
}

/**
 * Handler defines a specific action that should be taken
 * @export
 * @interface IoK8sApiCoreV1Handler
 */
export interface IoK8sApiCoreV1Handler {
    /**
     * 
     * @type {IoK8sApiCoreV1ExecAction}
     * @memberof IoK8sApiCoreV1Handler
     */
    exec?: IoK8sApiCoreV1ExecAction;
    /**
     * 
     * @type {IoK8sApiCoreV1HTTPGetAction}
     * @memberof IoK8sApiCoreV1Handler
     */
    httpGet?: IoK8sApiCoreV1HTTPGetAction;
    /**
     * 
     * @type {IoK8sApiCoreV1TCPSocketAction}
     * @memberof IoK8sApiCoreV1Handler
     */
    tcpSocket?: IoK8sApiCoreV1TCPSocketAction;
}

/**
 * HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
 * @export
 * @interface IoK8sApiCoreV1HostAlias
 */
export interface IoK8sApiCoreV1HostAlias {
    /**
     * Hostnames for the above IP address.
     * @type {Array<string>}
     * @memberof IoK8sApiCoreV1HostAlias
     */
    hostnames?: Array<string>;
    /**
     * IP address of the host file entry.
     * @type {string}
     * @memberof IoK8sApiCoreV1HostAlias
     */
    ip?: string;
}

/**
 * Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
 * @export
 * @interface IoK8sApiCoreV1HostPathVolumeSource
 */
export interface IoK8sApiCoreV1HostPathVolumeSource {
    /**
     * Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
     * @type {string}
     * @memberof IoK8sApiCoreV1HostPathVolumeSource
     */
    path: string;
    /**
     * Type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
     * @type {string}
     * @memberof IoK8sApiCoreV1HostPathVolumeSource
     */
    type?: string;
}

/**
 * Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
 * @export
 * @interface IoK8sApiCoreV1ISCSIVolumeSource
 */
export interface IoK8sApiCoreV1ISCSIVolumeSource {
    /**
     * whether support iSCSI Discovery CHAP authentication
     * @type {boolean}
     * @memberof IoK8sApiCoreV1ISCSIVolumeSource
     */
    chapAuthDiscovery?: boolean;
    /**
     * whether support iSCSI Session CHAP authentication
     * @type {boolean}
     * @memberof IoK8sApiCoreV1ISCSIVolumeSource
     */
    chapAuthSession?: boolean;
    /**
     * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
     * @type {string}
     * @memberof IoK8sApiCoreV1ISCSIVolumeSource
     */
    fsType?: string;
    /**
     * Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
     * @type {string}
     * @memberof IoK8sApiCoreV1ISCSIVolumeSource
     */
    initiatorName?: string;
    /**
     * Target iSCSI Qualified Name.
     * @type {string}
     * @memberof IoK8sApiCoreV1ISCSIVolumeSource
     */
    iqn: string;
    /**
     * iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
     * @type {string}
     * @memberof IoK8sApiCoreV1ISCSIVolumeSource
     */
    iscsiInterface?: string;
    /**
     * iSCSI Target Lun number.
     * @type {number}
     * @memberof IoK8sApiCoreV1ISCSIVolumeSource
     */
    lun: number;
    /**
     * iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
     * @type {Array<string>}
     * @memberof IoK8sApiCoreV1ISCSIVolumeSource
     */
    portals?: Array<string>;
    /**
     * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1ISCSIVolumeSource
     */
    readOnly?: boolean;
    /**
     * 
     * @type {IoK8sApiCoreV1LocalObjectReference}
     * @memberof IoK8sApiCoreV1ISCSIVolumeSource
     */
    secretRef?: IoK8sApiCoreV1LocalObjectReference;
    /**
     * iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
     * @type {string}
     * @memberof IoK8sApiCoreV1ISCSIVolumeSource
     */
    targetPortal: string;
}

/**
 * Maps a string key to a path within a volume.
 * @export
 * @interface IoK8sApiCoreV1KeyToPath
 */
export interface IoK8sApiCoreV1KeyToPath {
    /**
     * The key to project.
     * @type {string}
     * @memberof IoK8sApiCoreV1KeyToPath
     */
    key: string;
    /**
     * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
     * @type {number}
     * @memberof IoK8sApiCoreV1KeyToPath
     */
    mode?: number;
    /**
     * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
     * @type {string}
     * @memberof IoK8sApiCoreV1KeyToPath
     */
    path: string;
}

/**
 * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
 * @export
 * @interface IoK8sApiCoreV1Lifecycle
 */
export interface IoK8sApiCoreV1Lifecycle {
    /**
     * 
     * @type {IoK8sApiCoreV1Handler}
     * @memberof IoK8sApiCoreV1Lifecycle
     */
    postStart?: IoK8sApiCoreV1Handler;
    /**
     * 
     * @type {IoK8sApiCoreV1Handler}
     * @memberof IoK8sApiCoreV1Lifecycle
     */
    preStop?: IoK8sApiCoreV1Handler;
}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 * @export
 * @interface IoK8sApiCoreV1LocalObjectReference
 */
export interface IoK8sApiCoreV1LocalObjectReference {
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
     * @type {string}
     * @memberof IoK8sApiCoreV1LocalObjectReference
     */
    name?: string;
}

/**
 * Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
 * @export
 * @interface IoK8sApiCoreV1NFSVolumeSource
 */
export interface IoK8sApiCoreV1NFSVolumeSource {
    /**
     * Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
     * @type {string}
     * @memberof IoK8sApiCoreV1NFSVolumeSource
     */
    path: string;
    /**
     * ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
     * @type {boolean}
     * @memberof IoK8sApiCoreV1NFSVolumeSource
     */
    readOnly?: boolean;
    /**
     * Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
     * @type {string}
     * @memberof IoK8sApiCoreV1NFSVolumeSource
     */
    server: string;
}

/**
 * Node affinity is a group of node affinity scheduling rules.
 * @export
 * @interface IoK8sApiCoreV1NodeAffinity
 */
export interface IoK8sApiCoreV1NodeAffinity {
    /**
     * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
     * @type {Array<IoK8sApiCoreV1PreferredSchedulingTerm>}
     * @memberof IoK8sApiCoreV1NodeAffinity
     */
    preferredDuringSchedulingIgnoredDuringExecution?: Array<IoK8sApiCoreV1PreferredSchedulingTerm>;
    /**
     * 
     * @type {IoK8sApiCoreV1NodeSelector}
     * @memberof IoK8sApiCoreV1NodeAffinity
     */
    requiredDuringSchedulingIgnoredDuringExecution?: IoK8sApiCoreV1NodeSelector;
}

/**
 * A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
 * @export
 * @interface IoK8sApiCoreV1NodeSelector
 */
export interface IoK8sApiCoreV1NodeSelector {
    /**
     * Required. A list of node selector terms. The terms are ORed.
     * @type {Array<IoK8sApiCoreV1NodeSelectorTerm>}
     * @memberof IoK8sApiCoreV1NodeSelector
     */
    nodeSelectorTerms: Array<IoK8sApiCoreV1NodeSelectorTerm>;
}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 * @export
 * @interface IoK8sApiCoreV1NodeSelectorRequirement
 */
export interface IoK8sApiCoreV1NodeSelectorRequirement {
    /**
     * The label key that the selector applies to.
     * @type {string}
     * @memberof IoK8sApiCoreV1NodeSelectorRequirement
     */
    key: string;
    /**
     * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
     * @type {string}
     * @memberof IoK8sApiCoreV1NodeSelectorRequirement
     */
    operator: string;
    /**
     * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
     * @type {Array<string>}
     * @memberof IoK8sApiCoreV1NodeSelectorRequirement
     */
    values?: Array<string>;
}

/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 * @export
 * @interface IoK8sApiCoreV1NodeSelectorTerm
 */
export interface IoK8sApiCoreV1NodeSelectorTerm {
    /**
     * A list of node selector requirements by node's labels.
     * @type {Array<IoK8sApiCoreV1NodeSelectorRequirement>}
     * @memberof IoK8sApiCoreV1NodeSelectorTerm
     */
    matchExpressions?: Array<IoK8sApiCoreV1NodeSelectorRequirement>;
    /**
     * A list of node selector requirements by node's fields.
     * @type {Array<IoK8sApiCoreV1NodeSelectorRequirement>}
     * @memberof IoK8sApiCoreV1NodeSelectorTerm
     */
    matchFields?: Array<IoK8sApiCoreV1NodeSelectorRequirement>;
}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 * @export
 * @interface IoK8sApiCoreV1ObjectFieldSelector
 */
export interface IoK8sApiCoreV1ObjectFieldSelector {
    /**
     * Version of the schema the FieldPath is written in terms of, defaults to \"v1\".
     * @type {string}
     * @memberof IoK8sApiCoreV1ObjectFieldSelector
     */
    apiVersion?: string;
    /**
     * Path of the field to select in the specified API version.
     * @type {string}
     * @memberof IoK8sApiCoreV1ObjectFieldSelector
     */
    fieldPath: string;
}

/**
 * PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
 * @export
 * @interface IoK8sApiCoreV1PersistentVolumeClaimVolumeSource
 */
export interface IoK8sApiCoreV1PersistentVolumeClaimVolumeSource {
    /**
     * ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
     * @type {string}
     * @memberof IoK8sApiCoreV1PersistentVolumeClaimVolumeSource
     */
    claimName: string;
    /**
     * Will force the ReadOnly setting in VolumeMounts. Default false.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1PersistentVolumeClaimVolumeSource
     */
    readOnly?: boolean;
}

/**
 * Represents a Photon Controller persistent disk resource.
 * @export
 * @interface IoK8sApiCoreV1PhotonPersistentDiskVolumeSource
 */
export interface IoK8sApiCoreV1PhotonPersistentDiskVolumeSource {
    /**
     * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.
     * @type {string}
     * @memberof IoK8sApiCoreV1PhotonPersistentDiskVolumeSource
     */
    fsType?: string;
    /**
     * ID that identifies Photon Controller persistent disk
     * @type {string}
     * @memberof IoK8sApiCoreV1PhotonPersistentDiskVolumeSource
     */
    pdID: string;
}

/**
 * Pod affinity is a group of inter pod affinity scheduling rules.
 * @export
 * @interface IoK8sApiCoreV1PodAffinity
 */
export interface IoK8sApiCoreV1PodAffinity {
    /**
     * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
     * @type {Array<IoK8sApiCoreV1WeightedPodAffinityTerm>}
     * @memberof IoK8sApiCoreV1PodAffinity
     */
    preferredDuringSchedulingIgnoredDuringExecution?: Array<IoK8sApiCoreV1WeightedPodAffinityTerm>;
    /**
     * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
     * @type {Array<IoK8sApiCoreV1PodAffinityTerm>}
     * @memberof IoK8sApiCoreV1PodAffinity
     */
    requiredDuringSchedulingIgnoredDuringExecution?: Array<IoK8sApiCoreV1PodAffinityTerm>;
}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 * @export
 * @interface IoK8sApiCoreV1PodAffinityTerm
 */
export interface IoK8sApiCoreV1PodAffinityTerm {
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1LabelSelector}
     * @memberof IoK8sApiCoreV1PodAffinityTerm
     */
    labelSelector?: IoK8sApimachineryPkgApisMetaV1LabelSelector;
    /**
     * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"
     * @type {Array<string>}
     * @memberof IoK8sApiCoreV1PodAffinityTerm
     */
    namespaces?: Array<string>;
    /**
     * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
     * @type {string}
     * @memberof IoK8sApiCoreV1PodAffinityTerm
     */
    topologyKey: string;
}

/**
 * Pod anti affinity is a group of inter pod anti affinity scheduling rules.
 * @export
 * @interface IoK8sApiCoreV1PodAntiAffinity
 */
export interface IoK8sApiCoreV1PodAntiAffinity {
    /**
     * The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
     * @type {Array<IoK8sApiCoreV1WeightedPodAffinityTerm>}
     * @memberof IoK8sApiCoreV1PodAntiAffinity
     */
    preferredDuringSchedulingIgnoredDuringExecution?: Array<IoK8sApiCoreV1WeightedPodAffinityTerm>;
    /**
     * If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
     * @type {Array<IoK8sApiCoreV1PodAffinityTerm>}
     * @memberof IoK8sApiCoreV1PodAntiAffinity
     */
    requiredDuringSchedulingIgnoredDuringExecution?: Array<IoK8sApiCoreV1PodAffinityTerm>;
}

/**
 * PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
 * @export
 * @interface IoK8sApiCoreV1PodDNSConfig
 */
export interface IoK8sApiCoreV1PodDNSConfig {
    /**
     * A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
     * @type {Array<string>}
     * @memberof IoK8sApiCoreV1PodDNSConfig
     */
    nameservers?: Array<string>;
    /**
     * A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
     * @type {Array<IoK8sApiCoreV1PodDNSConfigOption>}
     * @memberof IoK8sApiCoreV1PodDNSConfig
     */
    options?: Array<IoK8sApiCoreV1PodDNSConfigOption>;
    /**
     * A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
     * @type {Array<string>}
     * @memberof IoK8sApiCoreV1PodDNSConfig
     */
    searches?: Array<string>;
}

/**
 * PodDNSConfigOption defines DNS resolver options of a pod.
 * @export
 * @interface IoK8sApiCoreV1PodDNSConfigOption
 */
export interface IoK8sApiCoreV1PodDNSConfigOption {
    /**
     * Required.
     * @type {string}
     * @memberof IoK8sApiCoreV1PodDNSConfigOption
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof IoK8sApiCoreV1PodDNSConfigOption
     */
    value?: string;
}

/**
 * PodReadinessGate contains the reference to a pod condition
 * @export
 * @interface IoK8sApiCoreV1PodReadinessGate
 */
export interface IoK8sApiCoreV1PodReadinessGate {
    /**
     * ConditionType refers to a condition in the pod's condition list with matching type.
     * @type {string}
     * @memberof IoK8sApiCoreV1PodReadinessGate
     */
    conditionType: string;
}

/**
 * PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
 * @export
 * @interface IoK8sApiCoreV1PodSecurityContext
 */
export interface IoK8sApiCoreV1PodSecurityContext {
    /**
     * A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:  1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----  If unset, the Kubelet will not modify the ownership and permissions of any volume.
     * @type {number}
     * @memberof IoK8sApiCoreV1PodSecurityContext
     */
    fsGroup?: number;
    /**
     * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
     * @type {number}
     * @memberof IoK8sApiCoreV1PodSecurityContext
     */
    runAsGroup?: number;
    /**
     * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1PodSecurityContext
     */
    runAsNonRoot?: boolean;
    /**
     * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
     * @type {number}
     * @memberof IoK8sApiCoreV1PodSecurityContext
     */
    runAsUser?: number;
    /**
     * 
     * @type {IoK8sApiCoreV1SELinuxOptions}
     * @memberof IoK8sApiCoreV1PodSecurityContext
     */
    seLinuxOptions?: IoK8sApiCoreV1SELinuxOptions;
    /**
     * A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
     * @type {Array<number>}
     * @memberof IoK8sApiCoreV1PodSecurityContext
     */
    supplementalGroups?: Array<number>;
    /**
     * Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
     * @type {Array<IoK8sApiCoreV1Sysctl>}
     * @memberof IoK8sApiCoreV1PodSecurityContext
     */
    sysctls?: Array<IoK8sApiCoreV1Sysctl>;
}

/**
 * PodSpec is a description of a pod.
 * @export
 * @interface IoK8sApiCoreV1PodSpec
 */
export interface IoK8sApiCoreV1PodSpec {
    /**
     * Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.
     * @type {number}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    activeDeadlineSeconds?: number;
    /**
     * 
     * @type {IoK8sApiCoreV1Affinity}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    affinity?: IoK8sApiCoreV1Affinity;
    /**
     * AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    automountServiceAccountToken?: boolean;
    /**
     * List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.
     * @type {Array<IoK8sApiCoreV1Container>}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    containers: Array<IoK8sApiCoreV1Container>;
    /**
     * 
     * @type {IoK8sApiCoreV1PodDNSConfig}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    dnsConfig?: IoK8sApiCoreV1PodDNSConfig;
    /**
     * Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
     * @type {string}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    dnsPolicy?: string;
    /**
     * HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.
     * @type {Array<IoK8sApiCoreV1HostAlias>}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    hostAliases?: Array<IoK8sApiCoreV1HostAlias>;
    /**
     * Use the host's ipc namespace. Optional: Default to false.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    hostIPC?: boolean;
    /**
     * Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    hostNetwork?: boolean;
    /**
     * Use the host's pid namespace. Optional: Default to false.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    hostPID?: boolean;
    /**
     * Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.
     * @type {string}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    hostname?: string;
    /**
     * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
     * @type {Array<IoK8sApiCoreV1LocalObjectReference>}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    imagePullSecrets?: Array<IoK8sApiCoreV1LocalObjectReference>;
    /**
     * List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
     * @type {Array<IoK8sApiCoreV1Container>}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    initContainers?: Array<IoK8sApiCoreV1Container>;
    /**
     * NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.
     * @type {string}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    nodeName?: string;
    /**
     * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
     * @type {{ [key: string]: string; }}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    nodeSelector?: { [key: string]: string; };
    /**
     * The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.
     * @type {number}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    priority?: number;
    /**
     * If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.
     * @type {string}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    priorityClassName?: string;
    /**
     * If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \"True\" More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md
     * @type {Array<IoK8sApiCoreV1PodReadinessGate>}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    readinessGates?: Array<IoK8sApiCoreV1PodReadinessGate>;
    /**
     * Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
     * @type {string}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    restartPolicy?: string;
    /**
     * RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://github.com/kubernetes/community/blob/master/keps/sig-node/0014-runtime-class.md This is an alpha feature and may change in the future.
     * @type {string}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    runtimeClassName?: string;
    /**
     * If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.
     * @type {string}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    schedulerName?: string;
    /**
     * 
     * @type {IoK8sApiCoreV1PodSecurityContext}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    securityContext?: IoK8sApiCoreV1PodSecurityContext;
    /**
     * DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.
     * @type {string}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    serviceAccount?: string;
    /**
     * ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
     * @type {string}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    serviceAccountName?: string;
    /**
     * Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false. This field is beta-level and may be disabled with the PodShareProcessNamespace feature.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    shareProcessNamespace?: boolean;
    /**
     * If specified, the fully qualified Pod hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\". If not specified, the pod will not have a domainname at all.
     * @type {string}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    subdomain?: string;
    /**
     * Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.
     * @type {number}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    terminationGracePeriodSeconds?: number;
    /**
     * If specified, the pod's tolerations.
     * @type {Array<IoK8sApiCoreV1Toleration>}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    tolerations?: Array<IoK8sApiCoreV1Toleration>;
    /**
     * List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes
     * @type {Array<IoK8sApiCoreV1Volume>}
     * @memberof IoK8sApiCoreV1PodSpec
     */
    volumes?: Array<IoK8sApiCoreV1Volume>;
}

/**
 * PodTemplateSpec describes the data a pod should have when created from a template
 * @export
 * @interface IoK8sApiCoreV1PodTemplateSpec
 */
export interface IoK8sApiCoreV1PodTemplateSpec {
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof IoK8sApiCoreV1PodTemplateSpec
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * 
     * @type {IoK8sApiCoreV1PodSpec}
     * @memberof IoK8sApiCoreV1PodTemplateSpec
     */
    spec?: IoK8sApiCoreV1PodSpec;
}

/**
 * PortworxVolumeSource represents a Portworx volume resource.
 * @export
 * @interface IoK8sApiCoreV1PortworxVolumeSource
 */
export interface IoK8sApiCoreV1PortworxVolumeSource {
    /**
     * FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.
     * @type {string}
     * @memberof IoK8sApiCoreV1PortworxVolumeSource
     */
    fsType?: string;
    /**
     * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1PortworxVolumeSource
     */
    readOnly?: boolean;
    /**
     * VolumeID uniquely identifies a Portworx volume
     * @type {string}
     * @memberof IoK8sApiCoreV1PortworxVolumeSource
     */
    volumeID: string;
}

/**
 * An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
 * @export
 * @interface IoK8sApiCoreV1PreferredSchedulingTerm
 */
export interface IoK8sApiCoreV1PreferredSchedulingTerm {
    /**
     * 
     * @type {IoK8sApiCoreV1NodeSelectorTerm}
     * @memberof IoK8sApiCoreV1PreferredSchedulingTerm
     */
    preference: IoK8sApiCoreV1NodeSelectorTerm;
    /**
     * Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
     * @type {number}
     * @memberof IoK8sApiCoreV1PreferredSchedulingTerm
     */
    weight: number;
}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 * @export
 * @interface IoK8sApiCoreV1Probe
 */
export interface IoK8sApiCoreV1Probe {
    /**
     * 
     * @type {IoK8sApiCoreV1ExecAction}
     * @memberof IoK8sApiCoreV1Probe
     */
    exec?: IoK8sApiCoreV1ExecAction;
    /**
     * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
     * @type {number}
     * @memberof IoK8sApiCoreV1Probe
     */
    failureThreshold?: number;
    /**
     * 
     * @type {IoK8sApiCoreV1HTTPGetAction}
     * @memberof IoK8sApiCoreV1Probe
     */
    httpGet?: IoK8sApiCoreV1HTTPGetAction;
    /**
     * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
     * @type {number}
     * @memberof IoK8sApiCoreV1Probe
     */
    initialDelaySeconds?: number;
    /**
     * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
     * @type {number}
     * @memberof IoK8sApiCoreV1Probe
     */
    periodSeconds?: number;
    /**
     * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
     * @type {number}
     * @memberof IoK8sApiCoreV1Probe
     */
    successThreshold?: number;
    /**
     * 
     * @type {IoK8sApiCoreV1TCPSocketAction}
     * @memberof IoK8sApiCoreV1Probe
     */
    tcpSocket?: IoK8sApiCoreV1TCPSocketAction;
    /**
     * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
     * @type {number}
     * @memberof IoK8sApiCoreV1Probe
     */
    timeoutSeconds?: number;
}

/**
 * Represents a projected volume source
 * @export
 * @interface IoK8sApiCoreV1ProjectedVolumeSource
 */
export interface IoK8sApiCoreV1ProjectedVolumeSource {
    /**
     * Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
     * @type {number}
     * @memberof IoK8sApiCoreV1ProjectedVolumeSource
     */
    defaultMode?: number;
    /**
     * list of volume projections
     * @type {Array<IoK8sApiCoreV1VolumeProjection>}
     * @memberof IoK8sApiCoreV1ProjectedVolumeSource
     */
    sources: Array<IoK8sApiCoreV1VolumeProjection>;
}

/**
 * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
 * @export
 * @interface IoK8sApiCoreV1QuobyteVolumeSource
 */
export interface IoK8sApiCoreV1QuobyteVolumeSource {
    /**
     * Group to map volume access to Default is no group
     * @type {string}
     * @memberof IoK8sApiCoreV1QuobyteVolumeSource
     */
    group?: string;
    /**
     * ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1QuobyteVolumeSource
     */
    readOnly?: boolean;
    /**
     * Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
     * @type {string}
     * @memberof IoK8sApiCoreV1QuobyteVolumeSource
     */
    registry: string;
    /**
     * User to map volume access to Defaults to serivceaccount user
     * @type {string}
     * @memberof IoK8sApiCoreV1QuobyteVolumeSource
     */
    user?: string;
    /**
     * Volume is a string that references an already created Quobyte volume by name.
     * @type {string}
     * @memberof IoK8sApiCoreV1QuobyteVolumeSource
     */
    volume: string;
}

/**
 * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
 * @export
 * @interface IoK8sApiCoreV1RBDVolumeSource
 */
export interface IoK8sApiCoreV1RBDVolumeSource {
    /**
     * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
     * @type {string}
     * @memberof IoK8sApiCoreV1RBDVolumeSource
     */
    fsType?: string;
    /**
     * The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
     * @type {string}
     * @memberof IoK8sApiCoreV1RBDVolumeSource
     */
    image: string;
    /**
     * Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
     * @type {string}
     * @memberof IoK8sApiCoreV1RBDVolumeSource
     */
    keyring?: string;
    /**
     * A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
     * @type {Array<string>}
     * @memberof IoK8sApiCoreV1RBDVolumeSource
     */
    monitors: Array<string>;
    /**
     * The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
     * @type {string}
     * @memberof IoK8sApiCoreV1RBDVolumeSource
     */
    pool?: string;
    /**
     * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
     * @type {boolean}
     * @memberof IoK8sApiCoreV1RBDVolumeSource
     */
    readOnly?: boolean;
    /**
     * 
     * @type {IoK8sApiCoreV1LocalObjectReference}
     * @memberof IoK8sApiCoreV1RBDVolumeSource
     */
    secretRef?: IoK8sApiCoreV1LocalObjectReference;
    /**
     * The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
     * @type {string}
     * @memberof IoK8sApiCoreV1RBDVolumeSource
     */
    user?: string;
}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 * @export
 * @interface IoK8sApiCoreV1ResourceFieldSelector
 */
export interface IoK8sApiCoreV1ResourceFieldSelector {
    /**
     * Container name: required for volumes, optional for env vars
     * @type {string}
     * @memberof IoK8sApiCoreV1ResourceFieldSelector
     */
    containerName?: string;
    /**
     * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.  The serialization format is:  <quantity>        ::= <signedNumber><suffix>   (Note that <suffix> may be empty, from the \"\" case in <decimalSI>.) <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html) <decimalSI>       ::= m | \"\" | k | M | G | T | P | E   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.) <decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>  No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.  When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.  Before serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:   a. No precision is lost   b. No fractional digits will be emitted   c. The exponent (or suffix) is as large as possible. The sign will be omitted unless the number is negative.  Examples:   1.5 will be serialized as \"1500m\"   1.5Gi will be serialized as \"1536Mi\"  Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.  Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)  This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
     * @type {string}
     * @memberof IoK8sApiCoreV1ResourceFieldSelector
     */
    divisor?: string;
    /**
     * Required: resource to select
     * @type {string}
     * @memberof IoK8sApiCoreV1ResourceFieldSelector
     */
    resource: string;
}

/**
 * ResourceRequirements describes the compute resource requirements.
 * @export
 * @interface IoK8sApiCoreV1ResourceRequirements
 */
export interface IoK8sApiCoreV1ResourceRequirements {
    /**
     * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
     * @type {{ [key: string]: string; }}
     * @memberof IoK8sApiCoreV1ResourceRequirements
     */
    limits?: { [key: string]: string; };
    /**
     * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
     * @type {{ [key: string]: string; }}
     * @memberof IoK8sApiCoreV1ResourceRequirements
     */
    requests?: { [key: string]: string; };
}

/**
 * SELinuxOptions are the labels to be applied to the container
 * @export
 * @interface IoK8sApiCoreV1SELinuxOptions
 */
export interface IoK8sApiCoreV1SELinuxOptions {
    /**
     * Level is SELinux level label that applies to the container.
     * @type {string}
     * @memberof IoK8sApiCoreV1SELinuxOptions
     */
    level?: string;
    /**
     * Role is a SELinux role label that applies to the container.
     * @type {string}
     * @memberof IoK8sApiCoreV1SELinuxOptions
     */
    role?: string;
    /**
     * Type is a SELinux type label that applies to the container.
     * @type {string}
     * @memberof IoK8sApiCoreV1SELinuxOptions
     */
    type?: string;
    /**
     * User is a SELinux user label that applies to the container.
     * @type {string}
     * @memberof IoK8sApiCoreV1SELinuxOptions
     */
    user?: string;
}

/**
 * ScaleIOVolumeSource represents a persistent ScaleIO volume
 * @export
 * @interface IoK8sApiCoreV1ScaleIOVolumeSource
 */
export interface IoK8sApiCoreV1ScaleIOVolumeSource {
    /**
     * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".
     * @type {string}
     * @memberof IoK8sApiCoreV1ScaleIOVolumeSource
     */
    fsType?: string;
    /**
     * The host address of the ScaleIO API Gateway.
     * @type {string}
     * @memberof IoK8sApiCoreV1ScaleIOVolumeSource
     */
    gateway: string;
    /**
     * The name of the ScaleIO Protection Domain for the configured storage.
     * @type {string}
     * @memberof IoK8sApiCoreV1ScaleIOVolumeSource
     */
    protectionDomain?: string;
    /**
     * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1ScaleIOVolumeSource
     */
    readOnly?: boolean;
    /**
     * 
     * @type {IoK8sApiCoreV1LocalObjectReference}
     * @memberof IoK8sApiCoreV1ScaleIOVolumeSource
     */
    secretRef: IoK8sApiCoreV1LocalObjectReference;
    /**
     * Flag to enable/disable SSL communication with Gateway, default false
     * @type {boolean}
     * @memberof IoK8sApiCoreV1ScaleIOVolumeSource
     */
    sslEnabled?: boolean;
    /**
     * Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
     * @type {string}
     * @memberof IoK8sApiCoreV1ScaleIOVolumeSource
     */
    storageMode?: string;
    /**
     * The ScaleIO Storage Pool associated with the protection domain.
     * @type {string}
     * @memberof IoK8sApiCoreV1ScaleIOVolumeSource
     */
    storagePool?: string;
    /**
     * The name of the storage system as configured in ScaleIO.
     * @type {string}
     * @memberof IoK8sApiCoreV1ScaleIOVolumeSource
     */
    system: string;
    /**
     * The name of a volume already created in the ScaleIO system that is associated with this volume source.
     * @type {string}
     * @memberof IoK8sApiCoreV1ScaleIOVolumeSource
     */
    volumeName?: string;
}

/**
 * SecretEnvSource selects a Secret to populate the environment variables with.  The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
 * @export
 * @interface IoK8sApiCoreV1SecretEnvSource
 */
export interface IoK8sApiCoreV1SecretEnvSource {
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
     * @type {string}
     * @memberof IoK8sApiCoreV1SecretEnvSource
     */
    name?: string;
    /**
     * Specify whether the Secret must be defined
     * @type {boolean}
     * @memberof IoK8sApiCoreV1SecretEnvSource
     */
    optional?: boolean;
}

/**
 * SecretKeySelector selects a key of a Secret.
 * @export
 * @interface IoK8sApiCoreV1SecretKeySelector
 */
export interface IoK8sApiCoreV1SecretKeySelector {
    /**
     * The key of the secret to select from.  Must be a valid secret key.
     * @type {string}
     * @memberof IoK8sApiCoreV1SecretKeySelector
     */
    key: string;
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
     * @type {string}
     * @memberof IoK8sApiCoreV1SecretKeySelector
     */
    name?: string;
    /**
     * Specify whether the Secret or it's key must be defined
     * @type {boolean}
     * @memberof IoK8sApiCoreV1SecretKeySelector
     */
    optional?: boolean;
}

/**
 * Adapts a secret into a projected volume.  The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
 * @export
 * @interface IoK8sApiCoreV1SecretProjection
 */
export interface IoK8sApiCoreV1SecretProjection {
    /**
     * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
     * @type {Array<IoK8sApiCoreV1KeyToPath>}
     * @memberof IoK8sApiCoreV1SecretProjection
     */
    items?: Array<IoK8sApiCoreV1KeyToPath>;
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
     * @type {string}
     * @memberof IoK8sApiCoreV1SecretProjection
     */
    name?: string;
    /**
     * Specify whether the Secret or its key must be defined
     * @type {boolean}
     * @memberof IoK8sApiCoreV1SecretProjection
     */
    optional?: boolean;
}

/**
 * Adapts a Secret into a volume.  The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
 * @export
 * @interface IoK8sApiCoreV1SecretVolumeSource
 */
export interface IoK8sApiCoreV1SecretVolumeSource {
    /**
     * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
     * @type {number}
     * @memberof IoK8sApiCoreV1SecretVolumeSource
     */
    defaultMode?: number;
    /**
     * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
     * @type {Array<IoK8sApiCoreV1KeyToPath>}
     * @memberof IoK8sApiCoreV1SecretVolumeSource
     */
    items?: Array<IoK8sApiCoreV1KeyToPath>;
    /**
     * Specify whether the Secret or it's keys must be defined
     * @type {boolean}
     * @memberof IoK8sApiCoreV1SecretVolumeSource
     */
    optional?: boolean;
    /**
     * Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * @type {string}
     * @memberof IoK8sApiCoreV1SecretVolumeSource
     */
    secretName?: string;
}

/**
 * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
 * @export
 * @interface IoK8sApiCoreV1SecurityContext
 */
export interface IoK8sApiCoreV1SecurityContext {
    /**
     * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
     * @type {boolean}
     * @memberof IoK8sApiCoreV1SecurityContext
     */
    allowPrivilegeEscalation?: boolean;
    /**
     * 
     * @type {IoK8sApiCoreV1Capabilities}
     * @memberof IoK8sApiCoreV1SecurityContext
     */
    capabilities?: IoK8sApiCoreV1Capabilities;
    /**
     * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1SecurityContext
     */
    privileged?: boolean;
    /**
     * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
     * @type {string}
     * @memberof IoK8sApiCoreV1SecurityContext
     */
    procMount?: string;
    /**
     * Whether this container has a read-only root filesystem. Default is false.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1SecurityContext
     */
    readOnlyRootFilesystem?: boolean;
    /**
     * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
     * @type {number}
     * @memberof IoK8sApiCoreV1SecurityContext
     */
    runAsGroup?: number;
    /**
     * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1SecurityContext
     */
    runAsNonRoot?: boolean;
    /**
     * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
     * @type {number}
     * @memberof IoK8sApiCoreV1SecurityContext
     */
    runAsUser?: number;
    /**
     * 
     * @type {IoK8sApiCoreV1SELinuxOptions}
     * @memberof IoK8sApiCoreV1SecurityContext
     */
    seLinuxOptions?: IoK8sApiCoreV1SELinuxOptions;
}

/**
 * ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
 * @export
 * @interface IoK8sApiCoreV1ServiceAccountTokenProjection
 */
export interface IoK8sApiCoreV1ServiceAccountTokenProjection {
    /**
     * Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
     * @type {string}
     * @memberof IoK8sApiCoreV1ServiceAccountTokenProjection
     */
    audience?: string;
    /**
     * ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
     * @type {number}
     * @memberof IoK8sApiCoreV1ServiceAccountTokenProjection
     */
    expirationSeconds?: number;
    /**
     * Path is the path relative to the mount point of the file to project the token into.
     * @type {string}
     * @memberof IoK8sApiCoreV1ServiceAccountTokenProjection
     */
    path: string;
}

/**
 * Represents a StorageOS persistent volume resource.
 * @export
 * @interface IoK8sApiCoreV1StorageOSVolumeSource
 */
export interface IoK8sApiCoreV1StorageOSVolumeSource {
    /**
     * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.
     * @type {string}
     * @memberof IoK8sApiCoreV1StorageOSVolumeSource
     */
    fsType?: string;
    /**
     * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1StorageOSVolumeSource
     */
    readOnly?: boolean;
    /**
     * 
     * @type {IoK8sApiCoreV1LocalObjectReference}
     * @memberof IoK8sApiCoreV1StorageOSVolumeSource
     */
    secretRef?: IoK8sApiCoreV1LocalObjectReference;
    /**
     * VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
     * @type {string}
     * @memberof IoK8sApiCoreV1StorageOSVolumeSource
     */
    volumeName?: string;
    /**
     * VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
     * @type {string}
     * @memberof IoK8sApiCoreV1StorageOSVolumeSource
     */
    volumeNamespace?: string;
}

/**
 * Sysctl defines a kernel parameter to be set
 * @export
 * @interface IoK8sApiCoreV1Sysctl
 */
export interface IoK8sApiCoreV1Sysctl {
    /**
     * Name of a property to set
     * @type {string}
     * @memberof IoK8sApiCoreV1Sysctl
     */
    name: string;
    /**
     * Value of a property to set
     * @type {string}
     * @memberof IoK8sApiCoreV1Sysctl
     */
    value: string;
}

/**
 * TCPSocketAction describes an action based on opening a socket
 * @export
 * @interface IoK8sApiCoreV1TCPSocketAction
 */
export interface IoK8sApiCoreV1TCPSocketAction {
    /**
     * Optional: Host name to connect to, defaults to the pod IP.
     * @type {string}
     * @memberof IoK8sApiCoreV1TCPSocketAction
     */
    host?: string;
    /**
     * IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
     * @type {string}
     * @memberof IoK8sApiCoreV1TCPSocketAction
     */
    port: string;
}

/**
 * The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
 * @export
 * @interface IoK8sApiCoreV1Toleration
 */
export interface IoK8sApiCoreV1Toleration {
    /**
     * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
     * @type {string}
     * @memberof IoK8sApiCoreV1Toleration
     */
    effect?: string;
    /**
     * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
     * @type {string}
     * @memberof IoK8sApiCoreV1Toleration
     */
    key?: string;
    /**
     * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
     * @type {string}
     * @memberof IoK8sApiCoreV1Toleration
     */
    operator?: string;
    /**
     * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
     * @type {number}
     * @memberof IoK8sApiCoreV1Toleration
     */
    tolerationSeconds?: number;
    /**
     * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
     * @type {string}
     * @memberof IoK8sApiCoreV1Toleration
     */
    value?: string;
}

/**
 * Volume represents a named volume in a pod that may be accessed by any container in the pod.
 * @export
 * @interface IoK8sApiCoreV1Volume
 */
export interface IoK8sApiCoreV1Volume {
    /**
     * 
     * @type {IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    awsElasticBlockStore?: IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1AzureDiskVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    azureDisk?: IoK8sApiCoreV1AzureDiskVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1AzureFileVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    azureFile?: IoK8sApiCoreV1AzureFileVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1CephFSVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    cephfs?: IoK8sApiCoreV1CephFSVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1CinderVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    cinder?: IoK8sApiCoreV1CinderVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1ConfigMapVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    configMap?: IoK8sApiCoreV1ConfigMapVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1DownwardAPIVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    downwardAPI?: IoK8sApiCoreV1DownwardAPIVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1EmptyDirVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    emptyDir?: IoK8sApiCoreV1EmptyDirVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1FCVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    fc?: IoK8sApiCoreV1FCVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1FlexVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    flexVolume?: IoK8sApiCoreV1FlexVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1FlockerVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    flocker?: IoK8sApiCoreV1FlockerVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1GCEPersistentDiskVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    gcePersistentDisk?: IoK8sApiCoreV1GCEPersistentDiskVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1GitRepoVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    gitRepo?: IoK8sApiCoreV1GitRepoVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1GlusterfsVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    glusterfs?: IoK8sApiCoreV1GlusterfsVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1HostPathVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    hostPath?: IoK8sApiCoreV1HostPathVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1ISCSIVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    iscsi?: IoK8sApiCoreV1ISCSIVolumeSource;
    /**
     * Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
     * @type {string}
     * @memberof IoK8sApiCoreV1Volume
     */
    name: string;
    /**
     * 
     * @type {IoK8sApiCoreV1NFSVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    nfs?: IoK8sApiCoreV1NFSVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1PersistentVolumeClaimVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    persistentVolumeClaim?: IoK8sApiCoreV1PersistentVolumeClaimVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1PhotonPersistentDiskVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    photonPersistentDisk?: IoK8sApiCoreV1PhotonPersistentDiskVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1PortworxVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    portworxVolume?: IoK8sApiCoreV1PortworxVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1ProjectedVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    projected?: IoK8sApiCoreV1ProjectedVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1QuobyteVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    quobyte?: IoK8sApiCoreV1QuobyteVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1RBDVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    rbd?: IoK8sApiCoreV1RBDVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1ScaleIOVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    scaleIO?: IoK8sApiCoreV1ScaleIOVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1SecretVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    secret?: IoK8sApiCoreV1SecretVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1StorageOSVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    storageos?: IoK8sApiCoreV1StorageOSVolumeSource;
    /**
     * 
     * @type {IoK8sApiCoreV1VsphereVirtualDiskVolumeSource}
     * @memberof IoK8sApiCoreV1Volume
     */
    vsphereVolume?: IoK8sApiCoreV1VsphereVirtualDiskVolumeSource;
}

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 * @export
 * @interface IoK8sApiCoreV1VolumeDevice
 */
export interface IoK8sApiCoreV1VolumeDevice {
    /**
     * devicePath is the path inside of the container that the device will be mapped to.
     * @type {string}
     * @memberof IoK8sApiCoreV1VolumeDevice
     */
    devicePath: string;
    /**
     * name must match the name of a persistentVolumeClaim in the pod
     * @type {string}
     * @memberof IoK8sApiCoreV1VolumeDevice
     */
    name: string;
}

/**
 * VolumeMount describes a mounting of a Volume within a container.
 * @export
 * @interface IoK8sApiCoreV1VolumeMount
 */
export interface IoK8sApiCoreV1VolumeMount {
    /**
     * Path within the container at which the volume should be mounted.  Must not contain ':'.
     * @type {string}
     * @memberof IoK8sApiCoreV1VolumeMount
     */
    mountPath: string;
    /**
     * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
     * @type {string}
     * @memberof IoK8sApiCoreV1VolumeMount
     */
    mountPropagation?: string;
    /**
     * This must match the Name of a Volume.
     * @type {string}
     * @memberof IoK8sApiCoreV1VolumeMount
     */
    name: string;
    /**
     * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1VolumeMount
     */
    readOnly?: boolean;
    /**
     * Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).
     * @type {string}
     * @memberof IoK8sApiCoreV1VolumeMount
     */
    subPath?: string;
}

/**
 * Projection that may be projected along with other supported volume types
 * @export
 * @interface IoK8sApiCoreV1VolumeProjection
 */
export interface IoK8sApiCoreV1VolumeProjection {
    /**
     * 
     * @type {IoK8sApiCoreV1ConfigMapProjection}
     * @memberof IoK8sApiCoreV1VolumeProjection
     */
    configMap?: IoK8sApiCoreV1ConfigMapProjection;
    /**
     * 
     * @type {IoK8sApiCoreV1DownwardAPIProjection}
     * @memberof IoK8sApiCoreV1VolumeProjection
     */
    downwardAPI?: IoK8sApiCoreV1DownwardAPIProjection;
    /**
     * 
     * @type {IoK8sApiCoreV1SecretProjection}
     * @memberof IoK8sApiCoreV1VolumeProjection
     */
    secret?: IoK8sApiCoreV1SecretProjection;
    /**
     * 
     * @type {IoK8sApiCoreV1ServiceAccountTokenProjection}
     * @memberof IoK8sApiCoreV1VolumeProjection
     */
    serviceAccountToken?: IoK8sApiCoreV1ServiceAccountTokenProjection;
}

/**
 * Represents a vSphere volume resource.
 * @export
 * @interface IoK8sApiCoreV1VsphereVirtualDiskVolumeSource
 */
export interface IoK8sApiCoreV1VsphereVirtualDiskVolumeSource {
    /**
     * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.
     * @type {string}
     * @memberof IoK8sApiCoreV1VsphereVirtualDiskVolumeSource
     */
    fsType?: string;
    /**
     * Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
     * @type {string}
     * @memberof IoK8sApiCoreV1VsphereVirtualDiskVolumeSource
     */
    storagePolicyID?: string;
    /**
     * Storage Policy Based Management (SPBM) profile name.
     * @type {string}
     * @memberof IoK8sApiCoreV1VsphereVirtualDiskVolumeSource
     */
    storagePolicyName?: string;
    /**
     * Path that identifies vSphere volume vmdk
     * @type {string}
     * @memberof IoK8sApiCoreV1VsphereVirtualDiskVolumeSource
     */
    volumePath: string;
}

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 * @export
 * @interface IoK8sApiCoreV1WeightedPodAffinityTerm
 */
export interface IoK8sApiCoreV1WeightedPodAffinityTerm {
    /**
     * 
     * @type {IoK8sApiCoreV1PodAffinityTerm}
     * @memberof IoK8sApiCoreV1WeightedPodAffinityTerm
     */
    podAffinityTerm: IoK8sApiCoreV1PodAffinityTerm;
    /**
     * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
     * @type {number}
     * @memberof IoK8sApiCoreV1WeightedPodAffinityTerm
     */
    weight: number;
}

/**
 * RoleRef contains information that points to the role being used
 * @export
 * @interface IoK8sApiRbacV1RoleRef
 */
export interface IoK8sApiRbacV1RoleRef {
    /**
     * APIGroup is the group for the resource being referenced
     * @type {string}
     * @memberof IoK8sApiRbacV1RoleRef
     */
    apiGroup: string;
    /**
     * Kind is the type of resource being referenced
     * @type {string}
     * @memberof IoK8sApiRbacV1RoleRef
     */
    kind: string;
    /**
     * Name is the name of resource being referenced
     * @type {string}
     * @memberof IoK8sApiRbacV1RoleRef
     */
    name: string;
}

/**
 * Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
 * @export
 * @interface IoK8sApiRbacV1Subject
 */
export interface IoK8sApiRbacV1Subject {
    /**
     * APIGroup holds the API group of the referenced subject. Defaults to \"\" for ServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io\" for User and Group subjects.
     * @type {string}
     * @memberof IoK8sApiRbacV1Subject
     */
    apiGroup?: string;
    /**
     * Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
     * @type {string}
     * @memberof IoK8sApiRbacV1Subject
     */
    kind: string;
    /**
     * Name of the object being referenced.
     * @type {string}
     * @memberof IoK8sApiRbacV1Subject
     */
    name: string;
    /**
     * Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty the Authorizer should report an error.
     * @type {string}
     * @memberof IoK8sApiRbacV1Subject
     */
    namespace?: string;
}

/**
 * Initializer is information about an initializer that has not yet completed.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1Initializer
 */
export interface IoK8sApimachineryPkgApisMetaV1Initializer {
    /**
     * name of the process that is responsible for initializing this object.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1Initializer
     */
    name: string;
}

/**
 * Initializers tracks the progress of initialization.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1Initializers
 */
export interface IoK8sApimachineryPkgApisMetaV1Initializers {
    /**
     * Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
     * @type {Array<IoK8sApimachineryPkgApisMetaV1Initializer>}
     * @memberof IoK8sApimachineryPkgApisMetaV1Initializers
     */
    pending: Array<IoK8sApimachineryPkgApisMetaV1Initializer>;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1Status}
     * @memberof IoK8sApimachineryPkgApisMetaV1Initializers
     */
    result?: IoK8sApimachineryPkgApisMetaV1Status;
}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1LabelSelector
 */
export interface IoK8sApimachineryPkgApisMetaV1LabelSelector {
    /**
     * matchExpressions is a list of label selector requirements. The requirements are ANDed.
     * @type {Array<IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement>}
     * @memberof IoK8sApimachineryPkgApisMetaV1LabelSelector
     */
    matchExpressions?: Array<IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement>;
    /**
     * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.
     * @type {{ [key: string]: string; }}
     * @memberof IoK8sApimachineryPkgApisMetaV1LabelSelector
     */
    matchLabels?: { [key: string]: string; };
}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement
 */
export interface IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement {
    /**
     * key is the label key that the selector applies to.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement
     */
    key: string;
    /**
     * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement
     */
    operator: string;
    /**
     * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
     * @type {Array<string>}
     * @memberof IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement
     */
    values?: Array<string>;
}

/**
 * ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1ListMeta
 */
export interface IoK8sApimachineryPkgApisMetaV1ListMeta {
    /**
     * continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ListMeta
     */
    _continue?: string;
    /**
     * String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ListMeta
     */
    resourceVersion?: string;
    /**
     * selfLink is a URL representing this object. Populated by the system. Read-only.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ListMeta
     */
    selfLink?: string;
}

/**
 * ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1ObjectMeta
 */
export interface IoK8sApimachineryPkgApisMetaV1ObjectMeta {
    /**
     * Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
     * @type {{ [key: string]: string; }}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    annotations?: { [key: string]: string; };
    /**
     * The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    clusterName?: string;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    creationTimestamp?: Date;
    /**
     * Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
     * @type {number}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    deletionGracePeriodSeconds?: number;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    deletionTimestamp?: Date;
    /**
     * Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.
     * @type {Array<string>}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    finalizers?: Array<string>;
    /**
     * GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.  If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).  Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    generateName?: string;
    /**
     * A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
     * @type {number}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    generation?: number;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1Initializers}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    initializers?: IoK8sApimachineryPkgApisMetaV1Initializers;
    /**
     * Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
     * @type {{ [key: string]: string; }}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    labels?: { [key: string]: string; };
    /**
     * Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    name?: string;
    /**
     * Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.  Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    namespace?: string;
    /**
     * List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
     * @type {Array<IoK8sApimachineryPkgApisMetaV1OwnerReference>}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    ownerReferences?: Array<IoK8sApimachineryPkgApisMetaV1OwnerReference>;
    /**
     * An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.  Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    resourceVersion?: string;
    /**
     * SelfLink is a URL representing this object. Populated by the system. Read-only.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    selfLink?: string;
    /**
     * UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.  Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1ObjectMeta
     */
    uid?: string;
}

/**
 * OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1OwnerReference
 */
export interface IoK8sApimachineryPkgApisMetaV1OwnerReference {
    /**
     * API version of the referent.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1OwnerReference
     */
    apiVersion: string;
    /**
     * If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
     * @type {boolean}
     * @memberof IoK8sApimachineryPkgApisMetaV1OwnerReference
     */
    blockOwnerDeletion?: boolean;
    /**
     * If true, this reference points to the managing controller.
     * @type {boolean}
     * @memberof IoK8sApimachineryPkgApisMetaV1OwnerReference
     */
    controller?: boolean;
    /**
     * Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1OwnerReference
     */
    kind: string;
    /**
     * Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1OwnerReference
     */
    name: string;
    /**
     * UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1OwnerReference
     */
    uid: string;
}

/**
 * Status is a return value for calls that don't return other objects.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1Status
 */
export interface IoK8sApimachineryPkgApisMetaV1Status {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1Status
     */
    apiVersion?: string;
    /**
     * Suggested HTTP return code for this status, 0 if not set.
     * @type {number}
     * @memberof IoK8sApimachineryPkgApisMetaV1Status
     */
    code?: number;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1StatusDetails}
     * @memberof IoK8sApimachineryPkgApisMetaV1Status
     */
    details?: IoK8sApimachineryPkgApisMetaV1StatusDetails;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1Status
     */
    kind?: string;
    /**
     * A human-readable description of the status of this operation.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1Status
     */
    message?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ListMeta}
     * @memberof IoK8sApimachineryPkgApisMetaV1Status
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ListMeta;
    /**
     * A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1Status
     */
    reason?: string;
    /**
     * Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1Status
     */
    status?: string;
}

/**
 * StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1StatusCause
 */
export interface IoK8sApimachineryPkgApisMetaV1StatusCause {
    /**
     * The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.  Examples:   \"name\" - the field \"name\" on the current resource   \"items[0].name\" - the field \"name\" on the first array entry in \"items\"
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1StatusCause
     */
    field?: string;
    /**
     * A human-readable description of the cause of the error.  This field may be presented as-is to a reader.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1StatusCause
     */
    message?: string;
    /**
     * A machine-readable description of the cause of the error. If this value is empty there is no information available.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1StatusCause
     */
    reason?: string;
}

/**
 * StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1StatusDetails
 */
export interface IoK8sApimachineryPkgApisMetaV1StatusDetails {
    /**
     * The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.
     * @type {Array<IoK8sApimachineryPkgApisMetaV1StatusCause>}
     * @memberof IoK8sApimachineryPkgApisMetaV1StatusDetails
     */
    causes?: Array<IoK8sApimachineryPkgApisMetaV1StatusCause>;
    /**
     * The group attribute of the resource associated with the status StatusReason.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1StatusDetails
     */
    group?: string;
    /**
     * The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1StatusDetails
     */
    kind?: string;
    /**
     * The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1StatusDetails
     */
    name?: string;
    /**
     * If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.
     * @type {number}
     * @memberof IoK8sApimachineryPkgApisMetaV1StatusDetails
     */
    retryAfterSeconds?: number;
    /**
     * UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1StatusDetails
     */
    uid?: string;
}


